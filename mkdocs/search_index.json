{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to MkDocs\n#\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n#\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n#\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\n\n\nSpecial Markdown\n#\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/#special-markdown",
            "text": "Don't try this at home  If you do, you will regret it.",
            "title": "Special Markdown"
        },
        {
            "location": "/security_of_networked_cars/",
            "text": "Security of networked cars\n#\n\n\nBlack Hat course for Car-Hacking:\n\nhttps://www.blackhat.com/us-16/training/car-hacking-hands-on.html\n\n\nJeep Hack (1.400.000 affected vehicles):\n\nhttp://www.wired.com/2015/07/hackers-remotely-kill-jeep-highway/\n\nhttp://gizmodo.com/hackers-have-the-power-to-remotely-hijack-half-a-millio-1719233440  \n\n\nDefCon: Howto hack a car (currently requires physical access, but demontrates nicely what will be possible)\n\nhttps://www.defcon.org/images/defcon-21/dc-21-presentations/Illera-Vidal/DEFCON-21-Illera-Vidal-Dude-WTF-in-My-Car-Updated.pdf\n\n\nFuture of Car Hacking:\n\nhttp://arstechnica.com/security/2015/08/highway-to-hack-why-were-just-at-the-beginning-of-the-auto-hacking-era/\n\n\nWhy to be worried:\n\nhttp://gizmodo.com/your-car-can-be-hacked-so-what-are-auto-makers-doing-a-1724118855\n\n\nWhy we need to prepare:\n\nhttp://gizmodo.com/as-car-hacking-becomes-reality-security-experts-call-f-1618893926\n\n\nCurrent state of car security:\n\nhttp://gizmodo.com/report-finds-anti-hacking-car-security-inconsistent-an-1684932752\n\n\nDEF CON 23 - Charlie Miller & Chris Valasek - Remote Exploitation of an Unaltered Passenger Vehicle:\n\nhttps://www.youtube.com/watch?v=OobLb1McxnI\n\nhttp://samy.pl/defcon2015/2015-defcon.pdf",
            "title": "Security of networked cars"
        },
        {
            "location": "/security_of_networked_cars/#security-of-networked-cars",
            "text": "Black Hat course for Car-Hacking: \nhttps://www.blackhat.com/us-16/training/car-hacking-hands-on.html  Jeep Hack (1.400.000 affected vehicles): \nhttp://www.wired.com/2015/07/hackers-remotely-kill-jeep-highway/ \nhttp://gizmodo.com/hackers-have-the-power-to-remotely-hijack-half-a-millio-1719233440    DefCon: Howto hack a car (currently requires physical access, but demontrates nicely what will be possible) \nhttps://www.defcon.org/images/defcon-21/dc-21-presentations/Illera-Vidal/DEFCON-21-Illera-Vidal-Dude-WTF-in-My-Car-Updated.pdf  Future of Car Hacking: \nhttp://arstechnica.com/security/2015/08/highway-to-hack-why-were-just-at-the-beginning-of-the-auto-hacking-era/  Why to be worried: \nhttp://gizmodo.com/your-car-can-be-hacked-so-what-are-auto-makers-doing-a-1724118855  Why we need to prepare: \nhttp://gizmodo.com/as-car-hacking-becomes-reality-security-experts-call-f-1618893926  Current state of car security: \nhttp://gizmodo.com/report-finds-anti-hacking-car-security-inconsistent-an-1684932752  DEF CON 23 - Charlie Miller & Chris Valasek - Remote Exploitation of an Unaltered Passenger Vehicle: \nhttps://www.youtube.com/watch?v=OobLb1McxnI \nhttp://samy.pl/defcon2015/2015-defcon.pdf",
            "title": "Security of networked cars"
        },
        {
            "location": "/homeserver/haproxy/",
            "text": "haproxy.cfg\n#\n\n\nglobal\n    maxconn 256\n    chroot /var/lib/haproxy\n    stats socket /run/haproxy.sock mode 660 level admin\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\ndefaults\n    mode    http\n    log     global\n    option  httplog\n    option  dontlognull\n    option redispatch\n    option forwardfor\n    option  http-server-close\n    timeout connect 5000\n    timeout client  50000\n    timeout server  50000\n\n\nfrontend http-in\n    bind *:80\n    acl host_jg hdr(host) -i kpserv.mooo.com\n    acl host_jg hdr(host) -m end .tzuiop.net\n\n    acl host_ri hdr(host) -i rbserv.mooo.com\n    acl host_ri hdr(host) -m end .richardbeyer.org\n\n    use_backend ri_http_server if host_ri\n    use_backend jg_http_server if host_jg\n\n\nfrontend http_in_ssl\n    bind *:443\n    mode tcp\n\n    tcp-request inspect-delay 5s\n    tcp-request content accept if { req_ssl_hello_type 1 }\n\n    default_backend bk_ssl_default\n\n# Using SNI to take routing decision\nbackend bk_ssl_default\n    mode tcp\n    no option checkcache\n    no option httpclose\n\n    tcp-request inspect-delay 5s\n    tcp-request content accept if { req.ssl_hello_type 1 }\n    tcp-request content reject\n\n    acl app_jo req_ssl_sni -m end .tzuiop.net\n    acl app_jo_1 req_ssl_sni -m end kpserv.mooo.com\n    acl app_ri_1 req_ssl_sni -i rbserv.mooo.com\n    acl app_ri req_ssl_sni -m end .richardbeyer.org\n\n    use-server server_jo if app_jo or app_jo_1\n    use-server server_ri if app_ri or app_ri_1\n\n    option ssl-hello-chk\n    server server_jo 192.168.188.84:443 check id 1 weight 0\n    server server_ri 192.168.188.90:443 check id 2 weight 0\n\nbackend ri_http_server\n    mode    http\n    server s1 192.168.188.90\n\nbackend jg_http_server\n    mode    http\n    server s2 192.168.188.84",
            "title": "Haproxy"
        },
        {
            "location": "/homeserver/haproxy/#haproxycfg",
            "text": "global\n    maxconn 256\n    chroot /var/lib/haproxy\n    stats socket /run/haproxy.sock mode 660 level admin\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\ndefaults\n    mode    http\n    log     global\n    option  httplog\n    option  dontlognull\n    option redispatch\n    option forwardfor\n    option  http-server-close\n    timeout connect 5000\n    timeout client  50000\n    timeout server  50000\n\n\nfrontend http-in\n    bind *:80\n    acl host_jg hdr(host) -i kpserv.mooo.com\n    acl host_jg hdr(host) -m end .tzuiop.net\n\n    acl host_ri hdr(host) -i rbserv.mooo.com\n    acl host_ri hdr(host) -m end .richardbeyer.org\n\n    use_backend ri_http_server if host_ri\n    use_backend jg_http_server if host_jg\n\n\nfrontend http_in_ssl\n    bind *:443\n    mode tcp\n\n    tcp-request inspect-delay 5s\n    tcp-request content accept if { req_ssl_hello_type 1 }\n\n    default_backend bk_ssl_default\n\n# Using SNI to take routing decision\nbackend bk_ssl_default\n    mode tcp\n    no option checkcache\n    no option httpclose\n\n    tcp-request inspect-delay 5s\n    tcp-request content accept if { req.ssl_hello_type 1 }\n    tcp-request content reject\n\n    acl app_jo req_ssl_sni -m end .tzuiop.net\n    acl app_jo_1 req_ssl_sni -m end kpserv.mooo.com\n    acl app_ri_1 req_ssl_sni -i rbserv.mooo.com\n    acl app_ri req_ssl_sni -m end .richardbeyer.org\n\n    use-server server_jo if app_jo or app_jo_1\n    use-server server_ri if app_ri or app_ri_1\n\n    option ssl-hello-chk\n    server server_jo 192.168.188.84:443 check id 1 weight 0\n    server server_ri 192.168.188.90:443 check id 2 weight 0\n\nbackend ri_http_server\n    mode    http\n    server s1 192.168.188.90\n\nbackend jg_http_server\n    mode    http\n    server s2 192.168.188.84",
            "title": "haproxy.cfg"
        },
        {
            "location": "/homeserver/homeserver/",
            "text": "Homeserver\n#\n\n\nEncrypting system HD\n#\n\n\nSee \nEncrypt SSD with LUKS and LVM\n\n\nRAID1 encrypted data partition with LVM\n#\n\n\nSee \nRAID + LVM\n\n\nChange LAN device name\n#\n\n\nEdit \n/etc/udev/rules.d/10-network.rules\n:\n\n\nSUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"<YOUR MAC ADDRESS GOES HERE>\", NAME=\"lan0\"\n\n\n\n\n\nRemote SSH shell into initram to unlock encrypted devices\n#\n\n\nRequirements: install \nyaourt\n package from AUR\n\n\nInstall the following packages:\n- dropbear\n- \nhttps://aur.archlinux.org/packages/mkinitcpio-netconf/\n (AUR)\n- \nhttps://aur.archlinux.org/packages/mkinitcpio-dropbear/\n (AUR)\n- \nhttps://aur.archlinux.org/packages/mkinitcpio-utils/\n (AUR)\n\n\nCopy your SSH pubkey to \n/etc/dropbear/root_key\n.\n\n\nAdd the \nnetconf\n, \ndropbear\n and \nencryptssh\n hooks before filesystems within the \"HOOKS\" array in \n/etc/mkinitcpio.conf\n (the encryptssh can be used to replace the encrypt hook).\n\n\n# /etc/mkinitcpio.conf\nMODULES=\"dm_mod dm_crypt ext4 aes_x86_64 sha256 sha512 r8169 i915\"\nHOOKS=\"base udev autodetect modconf block mdadm lvm2 netconf dropbear encryptssh filesystems keyboard fsck\"\n\n\n\n\n\nRebuild with \nmkinitcpio -p linux\n.\n\n\nProvide networking by adding \nip\n kernel parameter to GRUB config \n/etc/default/grub\n:\n\n\nGRUB_CMDLINE_LINUX=\"cryptdevice=/dev/sda3:vgroup:allow-discards ip=:::::eth0:dhcp\"\n\n\n\n\n\nRebuild grub config:\n\ngrub-mkconfig -o /boot/grub/grub.cfg\n\n\nReboot and login as root user to unlock encrypted devices.\n\n\n\n\nSource: https://wiki.archlinux.org/index.php/Dm-crypt/Specialties\n\n\n\n\nNetwork Plan\n#\n\n\nSee \nNetwork Plan\n.\n\n\nPower management\n#\n\n\nList of applications and services\n#\n\n\nRequired\n#\n\n\n\n\nGitLab \n\n\nMail: IMAP, SMTP, spamassassin...\n\n\nDHCP, DNS/dnsec\n\n\nfirewall / DMZ\n\n\n\n\nOptional\n#\n\n\n\n\nownCloud\n\n\n\n\nContainers: Docker, LXC, systemd-nspawn\n#\n\n\nUsefull links\n#\n\n\n\n\nDetailed Homeserver tut based on slackware: http://www.mbse.eu/linux/homeserver/\n\n\nhttp://mein.homelinux.com/wiki/wiki/10_schritte",
            "title": "Homeserver"
        },
        {
            "location": "/homeserver/homeserver/#homeserver",
            "text": "",
            "title": "Homeserver"
        },
        {
            "location": "/homeserver/homeserver/#encrypting-system-hd",
            "text": "See  Encrypt SSD with LUKS and LVM",
            "title": "Encrypting system HD"
        },
        {
            "location": "/homeserver/homeserver/#raid1-encrypted-data-partition-with-lvm",
            "text": "See  RAID + LVM",
            "title": "RAID1 encrypted data partition with LVM"
        },
        {
            "location": "/homeserver/homeserver/#change-lan-device-name",
            "text": "Edit  /etc/udev/rules.d/10-network.rules :  SUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"<YOUR MAC ADDRESS GOES HERE>\", NAME=\"lan0\"",
            "title": "Change LAN device name"
        },
        {
            "location": "/homeserver/homeserver/#remote-ssh-shell-into-initram-to-unlock-encrypted-devices",
            "text": "Requirements: install  yaourt  package from AUR  Install the following packages:\n- dropbear\n-  https://aur.archlinux.org/packages/mkinitcpio-netconf/  (AUR)\n-  https://aur.archlinux.org/packages/mkinitcpio-dropbear/  (AUR)\n-  https://aur.archlinux.org/packages/mkinitcpio-utils/  (AUR)  Copy your SSH pubkey to  /etc/dropbear/root_key .  Add the  netconf ,  dropbear  and  encryptssh  hooks before filesystems within the \"HOOKS\" array in  /etc/mkinitcpio.conf  (the encryptssh can be used to replace the encrypt hook).  # /etc/mkinitcpio.conf\nMODULES=\"dm_mod dm_crypt ext4 aes_x86_64 sha256 sha512 r8169 i915\"\nHOOKS=\"base udev autodetect modconf block mdadm lvm2 netconf dropbear encryptssh filesystems keyboard fsck\"  Rebuild with  mkinitcpio -p linux .  Provide networking by adding  ip  kernel parameter to GRUB config  /etc/default/grub :  GRUB_CMDLINE_LINUX=\"cryptdevice=/dev/sda3:vgroup:allow-discards ip=:::::eth0:dhcp\"  Rebuild grub config: grub-mkconfig -o /boot/grub/grub.cfg  Reboot and login as root user to unlock encrypted devices.   Source: https://wiki.archlinux.org/index.php/Dm-crypt/Specialties",
            "title": "Remote SSH shell into initram to unlock encrypted devices"
        },
        {
            "location": "/homeserver/homeserver/#network-plan",
            "text": "See  Network Plan .",
            "title": "Network Plan"
        },
        {
            "location": "/homeserver/homeserver/#power-management",
            "text": "",
            "title": "Power management"
        },
        {
            "location": "/homeserver/homeserver/#list-of-applications-and-services",
            "text": "",
            "title": "List of applications and services"
        },
        {
            "location": "/homeserver/homeserver/#required",
            "text": "GitLab   Mail: IMAP, SMTP, spamassassin...  DHCP, DNS/dnsec  firewall / DMZ",
            "title": "Required"
        },
        {
            "location": "/homeserver/homeserver/#optional",
            "text": "ownCloud",
            "title": "Optional"
        },
        {
            "location": "/homeserver/homeserver/#containers-docker-lxc-systemd-nspawn",
            "text": "",
            "title": "Containers: Docker, LXC, systemd-nspawn"
        },
        {
            "location": "/homeserver/homeserver/#usefull-links",
            "text": "Detailed Homeserver tut based on slackware: http://www.mbse.eu/linux/homeserver/  http://mein.homelinux.com/wiki/wiki/10_schritte",
            "title": "Usefull links"
        },
        {
            "location": "/homeserver/network_plan/",
            "text": "Homeserver Network Plan\n#\n\n\nTwo physical interfaces:\n\n\n\n\nlan0\n: 1GBit interface conecting to the local client computers\n\n\nwan0\n: 100/1000Mbit interface connecting to the DSL router. IP by DHCP.\n\n\n\n\nLocal LAN network: 10.200.200.0/21, which leaves us with 8 class C nets:\n\n\n10.200.200.0/24 - Clients LAN\n10.200.201.0/24 - reserved for later use\n10.200.202.0/24 - reserved for later use\n10.200.203.0/24 - reserved for later use\n10.200.204.0/24 - reserved for later use\n10.200.205.0/24 - reserved for later use\n10.200.206.0/24 - reserved for later use\n10.200.207.0/24 - reserved for later use\n\n\nServices on homeserver network:\n#\n\n\nDHCP and DNS for\n\n\nPackages needed: \n\nbind dnsmasq inetd iproute2 iptables iputils\n\n\nDomain: \nhephaistos.local\n\n\nPersistan device names for interfaces\n#\n\n\n/etc/udev/rules.d/10-network.rules\n:\n\n\nSUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"<YOUR MAC GOES HERE>\", NAME=\"lan0\"\nSUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"<YOUR MAC GOES HERE>\", NAME=\"wan0\"",
            "title": "Network plan"
        },
        {
            "location": "/homeserver/network_plan/#homeserver-network-plan",
            "text": "Two physical interfaces:   lan0 : 1GBit interface conecting to the local client computers  wan0 : 100/1000Mbit interface connecting to the DSL router. IP by DHCP.   Local LAN network: 10.200.200.0/21, which leaves us with 8 class C nets:  10.200.200.0/24 - Clients LAN\n10.200.201.0/24 - reserved for later use\n10.200.202.0/24 - reserved for later use\n10.200.203.0/24 - reserved for later use\n10.200.204.0/24 - reserved for later use\n10.200.205.0/24 - reserved for later use\n10.200.206.0/24 - reserved for later use\n10.200.207.0/24 - reserved for later use",
            "title": "Homeserver Network Plan"
        },
        {
            "location": "/homeserver/network_plan/#services-on-homeserver-network",
            "text": "DHCP and DNS for  Packages needed:  bind dnsmasq inetd iproute2 iptables iputils  Domain:  hephaistos.local",
            "title": "Services on homeserver network:"
        },
        {
            "location": "/homeserver/network_plan/#persistan-device-names-for-interfaces",
            "text": "/etc/udev/rules.d/10-network.rules :  SUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"<YOUR MAC GOES HERE>\", NAME=\"lan0\"\nSUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"<YOUR MAC GOES HERE>\", NAME=\"wan0\"",
            "title": "Persistan device names for interfaces"
        },
        {
            "location": "/homeserver/samba/",
            "text": "Samba\n#\n\n\n/etc/samba/smb.conf\n#\n\n\n[global]\n\n  \nworkgroup\n \n=\n \nOLYMPUS\n\n\n  server string = HEPHAISTOS\n\n\n  netbios name = HEPHAISTOS\n\n\n  hosts allow = 192.168.222. 127.\n\n\n  deadtime = 60\n\n\n  disable netbios = yes\n\n\n  dns proxy = no\n\n\n  invalid users = root \n\n\n  security = user \n\n\n  map to guest = Bad User\n\n\n  max connections = 100\n\n\n  log file = /var/log/samba/%m.log\n\n\n  max log size = 50\n\n\n  encrypt passwords = yes\n\n\n  smb passwd file = /etc/samba/smbpasswd\n\n\n  unix password sync = no\n\n\n  preserve case = yes\n\n\n  short preserve case = yes\n\n\n  \n# Interfaces to listen on\n\n  \n; interfaces = 192.168.222.28/24 192.168.188.84/24 \n\n  \ninterfaces\n \n=\n \n192.168.222.28/24\n\n\n  \n# Disable printer support\n\n  \nload printers\n \n=\n \nno\n\n\n  printing = bsd\n\n\n  printcap name = /dev/null\n\n\n  disable spoolss = yes\n\n\n  show add printer wizard = no\n\n\n  print notify backchannel = no\n\n\n  \n# Unix users can map to different SMB User names\n\n  \n;  username map = /etc/samba/smbusers\n\n\n  \n# Default permissions for all shares  \n\n  \ninherit owner\n \n=\n \nyes \n\n\n  create mask = 0660 \n\n\n  directory mask = 0770\n\n\n  force create mode = 0660\n\n\n  force directory mode = 0770\n\n\n  \n# Performance tuning\n\n  \nsocket options\n \n=\n \nTCP_NODELAY IPTOS_LOWDELAY\n\n\n  write cache size = 262144\n\n\n  use sendfile = true\n\n\n  getwd cache = yes\n\n\n  min receivefile size = 16384\n\n\n  max xmit = 65536",
            "title": "Samba"
        },
        {
            "location": "/homeserver/samba/#samba",
            "text": "",
            "title": "Samba"
        },
        {
            "location": "/homeserver/samba/#etcsambasmbconf",
            "text": "[global] \n   workgroup   =   OLYMPUS    server string = HEPHAISTOS    netbios name = HEPHAISTOS    hosts allow = 192.168.222. 127.    deadtime = 60    disable netbios = yes    dns proxy = no    invalid users = root     security = user     map to guest = Bad User    max connections = 100    log file = /var/log/samba/%m.log    max log size = 50    encrypt passwords = yes    smb passwd file = /etc/samba/smbpasswd    unix password sync = no    preserve case = yes    short preserve case = yes \n\n   # Interfaces to listen on \n   ; interfaces = 192.168.222.28/24 192.168.188.84/24  \n   interfaces   =   192.168.222.28/24 \n\n   # Disable printer support \n   load printers   =   no    printing = bsd    printcap name = /dev/null    disable spoolss = yes    show add printer wizard = no    print notify backchannel = no \n\n   # Unix users can map to different SMB User names \n   ;  username map = /etc/samba/smbusers \n\n   # Default permissions for all shares   \n   inherit owner   =   yes     create mask = 0660     directory mask = 0770    force create mode = 0660    force directory mode = 0770 \n\n   # Performance tuning \n   socket options   =   TCP_NODELAY IPTOS_LOWDELAY    write cache size = 262144    use sendfile = true    getwd cache = yes    min receivefile size = 16384    max xmit = 65536",
            "title": "/etc/samba/smb.conf"
        },
        {
            "location": "/linux/arch_post_install/",
            "text": "Post-installation tips for Arch/Antergos Linux\n#\n\n\nPackages to install\n#\n\n\nyaourt -S mackup inkscape gimp owncloud-client firefox vivaldi sublime-text-dev ttf-google-fonts otf-fira-mono otf-fira-sans ttf-ms-fonts rhythmbox thunderbird filezilla keepassx calibre homebank smplayer dropbox encfs electrum qownnotes wine winetricks nxt mariadb watson steam tor-browser-en meld python-pip libreoffice-fresh xskat gnome-encfs-hg arch-install-scripts android-tools android-udev abs base-devel\n\n\nImageoptim requirements:\n#\n\n\nyaourt -S jpegoptim pngcrush advancecomp gifsicle jhead optipng pngquant\n\n\nprofile-sync-daemon\n#\n\n\nyaourt -S profile-sync-daemon\n\n\nWatson\n#\n\n\n\n\nCopy or symlink \n~.watson.cfg\n from owncloud\n\n\nwatson restore\n \n\n\n\n\nLocale settings\n#\n\n\n/etc/locale.conf\n:\n\n\nLANG\n=\nen_US.UTF-8\n\nLC_NUMERIC\n=\nde_DE.UTF-8\n\nLC_TIME\n=\nde_DE.UTF-8\n\nLC_COLLATE\n=\nde_DE.UTF-8\n\nLC_MONETARY\n=\nde_DE.UTF-8\n\nLC_NAME\n=\nde_DE.UTF-8\n\nLC_ADDRESS\n=\nde_DE.UTF-8\n\nLC_TELEPHONE\n=\nde_DE.UTF-8\n\nLC_MEASUREMENT\n=\nde_DE.UTF-8\n\nLC_MESSAGES\n=\nen_US.utf8\n\n\n\n\n\nIf using GNOME3, these variables also have to be set in the \n~/.profile\n.startup.\n\n\n\n\nHint\n\n\n\n\nbash doesn't read .profile if a .bash_profile is found\n\n\nTherefore created a .bash_profile which reads .profile and .bashrc afterwards, so gnome can read .profile without interfering with bash.\n\n\nIf a .bash_profile exists, nash won't read .profile -> source .profile from .bash_profile\n\n\n\n\n\n\nexport\n \nLANG\n=\nen_US.UTF-8\n\nexport\n \nLC_NUMERIC\n=\nde_DE.UTF-8\n\nexport\n \nLC_TIME\n=\nde_DE.UTF-8\n\nexport\n \nLC_COLLATE\n=\nde_DE.UTF-8\n\nexport\n \nLC_MONETARY\n=\nde_DE.UTF-8\n\nexport\n \nLC_NAME\n=\nde_DE.UTF-8\n\nexport\n \nLC_ADDRESS\n=\nde_DE.UTF-8\n\nexport\n \nLC_TELEPHONE\n=\nde_DE.UTF-8\n\nexport\n \nLC_MEASUREMENT\n=\nde_DE.UTF-8\n\nexport\n \nLC_MESSAGES\n=\nen_US.utf8\n\n\n\n\n\nActivate nodeadkeys:\n\n\necho KEYMAP=de-latin1-nodeadkeys > /etc/vconsole.conf\n\n\nlocalectl --no-convert set-keymap de-latin1-nodeadkeys\n\n#localectl --no-convert set-x11-keymap de pc105 nodeadkeys\n\nlocalectl set-x11-keymap de pc105 nodeadkeys\n\n\n\n\n\nAutomount encfs\n#\n\n\n\n\nInstall \nlibreoffice-fresh\n\n\ngnome-encfs -a ~/ownCloud/.private ~/crypt\n\n\n\n\nDark theme for GIMP and Inkscape\n#\n\n\nInkscape\n#\n\n\nInstall either Vertex or FlatStudioDark Theme:\n\n\nyaourt -S gtk-theme-flatstudio\nyaourt -S vertex-themes\n\n\n\n\n\nCreate custom launcher script \n~/bin/inkscape\n:\n\n\n#!/bin/bash\n\n\nexport\n \nGTK2_RC_FILES\n=\n/usr/share/themes/FlatStudioDark/gtk-2.0/gtkrc \n/usr/bin/inkscape\n\n\n\n\n\nchmod u+x ~/bin/inkscape\n\n\nCreate an application launcher \n~/.local/share/applications/inkscape.desktop\n:\n\n\n#!/usr/bin/env xdg-open\n\n\n\n[\nDesktop Entry\n]\n\n\nVersion\n=\n1.0\n\nName\n=\nInkscapeDark\n\nGenericName\n=\nVector Graphics Editor\nX-GNOME-FullName\n=\nInkscape Vector Graphics Editor\n\nComment\n=\nCreate and edit Scalable Vector Graphics images\n\nType\n=\nApplication\n\nCategories\n=\nGraphics\n;\nVectorGraphics\n;\nGTK\n;\n\n\nMimeType\n=\nimage/svg+xml\n;\nimage/svg+xml-compressed\n;\napplication/vnd.corel-draw\n;\napplication/pdf\n;\napplication/postscript\n;\nimage/x-eps\n;\napplication/illustrator\n;\n\n\nExec\n=\n/home/<USERNAME>/bin/inkscape %F \n\nPath\n=\n/home/<USERNAME>/bin\n\nTerminal\n=\nfalse\n\n\nStartupNotify\n=\ntrue\n\n\nIcon\n=\ninkscape\nX-Ayatana-Desktop-Shortcuts\n=\nDrawing\n\n\n\n\n\nReplace \n with your username ;)\n\n\nGIMP\n#\n\n\nJust place your desired theme inside the \n~/.gimp-2.8/themes\n directory. Start Gimp and Select yout theme under the \"Theme\" tab.\n\n\nExample Theme: https://www.gnome-look.org/content/show.php?content=160952\n\n\nGnome-shell extensions\n#\n\n\n# ~/.local/share/gnome-shell/extensions/\n\n\n\n'hide-legacy-tray@shell-extensions.jonnylamb.com'\n/\n\n'maximus@luis.pabon.auronconsulting.co.uk'\n/\n\n'mediaplayer@patapon.info'\n/\n\n'openweather-extension@jenslody.de'\n/\n\n'scroll-workspaces@gfxmonk.net'\n/\n\n'shellshape@gfxmonk.net'\n/\n\n'shell-volume-mixer@derhofbauer.at'\n/\n\n'TeaTime@oleid.mescharet.de'\n/\n\n'topIcons@adel.gadllah@gmail.com'\n/\n\n'workspaces-to-dock@passingthru67.gmail.com'\n/\n\n\n\n\n\nDownload as tarball and extract into \n~/.local/share/gnome-shell/extensions/\n:\n\n\ngnome-shell-extensions.tar.gz",
            "title": "Arch post install"
        },
        {
            "location": "/linux/arch_post_install/#post-installation-tips-for-archantergos-linux",
            "text": "",
            "title": "Post-installation tips for Arch/Antergos Linux"
        },
        {
            "location": "/linux/arch_post_install/#packages-to-install",
            "text": "yaourt -S mackup inkscape gimp owncloud-client firefox vivaldi sublime-text-dev ttf-google-fonts otf-fira-mono otf-fira-sans ttf-ms-fonts rhythmbox thunderbird filezilla keepassx calibre homebank smplayer dropbox encfs electrum qownnotes wine winetricks nxt mariadb watson steam tor-browser-en meld python-pip libreoffice-fresh xskat gnome-encfs-hg arch-install-scripts android-tools android-udev abs base-devel",
            "title": "Packages to install"
        },
        {
            "location": "/linux/arch_post_install/#imageoptim-requirements",
            "text": "yaourt -S jpegoptim pngcrush advancecomp gifsicle jhead optipng pngquant",
            "title": "Imageoptim requirements:"
        },
        {
            "location": "/linux/arch_post_install/#profile-sync-daemon",
            "text": "yaourt -S profile-sync-daemon",
            "title": "profile-sync-daemon"
        },
        {
            "location": "/linux/arch_post_install/#watson",
            "text": "Copy or symlink  ~.watson.cfg  from owncloud  watson restore",
            "title": "Watson"
        },
        {
            "location": "/linux/arch_post_install/#locale-settings",
            "text": "/etc/locale.conf :  LANG = en_US.UTF-8 LC_NUMERIC = de_DE.UTF-8 LC_TIME = de_DE.UTF-8 LC_COLLATE = de_DE.UTF-8 LC_MONETARY = de_DE.UTF-8 LC_NAME = de_DE.UTF-8 LC_ADDRESS = de_DE.UTF-8 LC_TELEPHONE = de_DE.UTF-8 LC_MEASUREMENT = de_DE.UTF-8 LC_MESSAGES = en_US.utf8  If using GNOME3, these variables also have to be set in the  ~/.profile .startup.   Hint   bash doesn't read .profile if a .bash_profile is found  Therefore created a .bash_profile which reads .profile and .bashrc afterwards, so gnome can read .profile without interfering with bash.  If a .bash_profile exists, nash won't read .profile -> source .profile from .bash_profile    export   LANG = en_US.UTF-8 export   LC_NUMERIC = de_DE.UTF-8 export   LC_TIME = de_DE.UTF-8 export   LC_COLLATE = de_DE.UTF-8 export   LC_MONETARY = de_DE.UTF-8 export   LC_NAME = de_DE.UTF-8 export   LC_ADDRESS = de_DE.UTF-8 export   LC_TELEPHONE = de_DE.UTF-8 export   LC_MEASUREMENT = de_DE.UTF-8 export   LC_MESSAGES = en_US.utf8  Activate nodeadkeys:  echo KEYMAP=de-latin1-nodeadkeys > /etc/vconsole.conf  localectl --no-convert set-keymap de-latin1-nodeadkeys #localectl --no-convert set-x11-keymap de pc105 nodeadkeys \nlocalectl set-x11-keymap de pc105 nodeadkeys",
            "title": "Locale settings"
        },
        {
            "location": "/linux/arch_post_install/#automount-encfs",
            "text": "Install  libreoffice-fresh  gnome-encfs -a ~/ownCloud/.private ~/crypt",
            "title": "Automount encfs"
        },
        {
            "location": "/linux/arch_post_install/#dark-theme-for-gimp-and-inkscape",
            "text": "",
            "title": "Dark theme for GIMP and Inkscape"
        },
        {
            "location": "/linux/arch_post_install/#inkscape",
            "text": "Install either Vertex or FlatStudioDark Theme:  yaourt -S gtk-theme-flatstudio\nyaourt -S vertex-themes  Create custom launcher script  ~/bin/inkscape :  #!/bin/bash  export   GTK2_RC_FILES = /usr/share/themes/FlatStudioDark/gtk-2.0/gtkrc \n/usr/bin/inkscape  chmod u+x ~/bin/inkscape  Create an application launcher  ~/.local/share/applications/inkscape.desktop :  #!/usr/bin/env xdg-open  [ Desktop Entry ]  Version = 1.0 Name = InkscapeDark GenericName = Vector Graphics Editor\nX-GNOME-FullName = Inkscape Vector Graphics Editor Comment = Create and edit Scalable Vector Graphics images Type = Application Categories = Graphics ; VectorGraphics ; GTK ;  MimeType = image/svg+xml ; image/svg+xml-compressed ; application/vnd.corel-draw ; application/pdf ; application/postscript ; image/x-eps ; application/illustrator ;  Exec = /home/<USERNAME>/bin/inkscape %F  Path = /home/<USERNAME>/bin Terminal = false  StartupNotify = true  Icon = inkscape\nX-Ayatana-Desktop-Shortcuts = Drawing  Replace   with your username ;)",
            "title": "Inkscape"
        },
        {
            "location": "/linux/arch_post_install/#gimp",
            "text": "Just place your desired theme inside the  ~/.gimp-2.8/themes  directory. Start Gimp and Select yout theme under the \"Theme\" tab.  Example Theme: https://www.gnome-look.org/content/show.php?content=160952",
            "title": "GIMP"
        },
        {
            "location": "/linux/arch_post_install/#gnome-shell-extensions",
            "text": "# ~/.local/share/gnome-shell/extensions/  'hide-legacy-tray@shell-extensions.jonnylamb.com' / 'maximus@luis.pabon.auronconsulting.co.uk' / 'mediaplayer@patapon.info' / 'openweather-extension@jenslody.de' / 'scroll-workspaces@gfxmonk.net' / 'shellshape@gfxmonk.net' / 'shell-volume-mixer@derhofbauer.at' / 'TeaTime@oleid.mescharet.de' / 'topIcons@adel.gadllah@gmail.com' / 'workspaces-to-dock@passingthru67.gmail.com' /  Download as tarball and extract into  ~/.local/share/gnome-shell/extensions/ :  gnome-shell-extensions.tar.gz",
            "title": "Gnome-shell extensions"
        },
        {
            "location": "/linux/docker/",
            "text": "Docker Overview\n#\n\n\nWhat is docker?\n#\n\n\n\n\ncontainer based virtualization, uses the kernel on the host's OS to run multiple guest instances\n\n\neach guest instance is called a \ncontainer\n\n\neach container has its own:\n\n\nroot filesystem\n\n\nprocesses\n\n\nmemory\n\n\ndevices\n\n\nnetwork ports\n\n\neach container has its own libraries\n\n\n\n\nBenefits of Docker\n#\n\n\n\n\nportable between platforms\n\n\nnot a VM: only contains the application + required libraries\n\n\nScalability: easily spin uo new containers if needed\n\n\nrun more apss on one host machine\n\n\n\n\nDocker concepts and terminology\n#\n\n\nDocker Engine\n#\n\n\n\n\ndaemon that enables containers to be built, shipped and run\n\n\nuses Linux kernel namespaces and control groups (cgroups)\n\n\nnamespaces give us the isolated workspace\n\n\n\n\nNamespaces used:\n#\n\n\n\n\npid\n\n\nnet\n\n\nipc\n\n\nmnt\n\n\nuts\n\n\n\n\nDocker containers and images\n#\n\n\nImages\n#\n\n\n\n\nread-only template to create containers\n\n\nbuilt by you or other Docker-users\n\n\nstored in the Docker Hub or local registry\n\n\ninside a registry are multiple repositories, that can contain multiple images\n\n\n\n\nContainers\n#\n\n\n\n\nIsolated application platform\n\n\nContains everything needed to run your application\n\n\nbase on one or more images\n\n\n\n\nDocker Hub\n#\n\n\n\n\nApp store for docker \n\n\n\n\nDocker Orchastration\n#\n\n\n3 tools for orchastrating distributed applications:\n\n\n\n\nDocker Machine\n: Tool that provisions Docker hosts and installs the Docker engine on them\n\n\nDocker Swarm\n: Tool that clusters many Engines and schedules containers\n\n\nDocker Compose\n: Tool to create and manage multi-container applications\n\n\n\n\nDocker Images\n#\n\n\nDocker Fundamentals\n#\n\n\ndocker commit [options] [container ID] [repository[:tag]]\n saves changes to a container\n\n\nExample:\n\n\ndocker commit 25442324 thej/myapplication:1.0\n\n\nShow docker containers\n\ndocker ps -a\n\n\nStart image as daemon:\n\ndocker run -d nginx\n\n\nStart a container using container ID\n\ndocker start <container ID>\n\n\nStop a container using container ID\n\ndocker stop <container ID>\n\n\nStart another process within a container:\n\ndocker exec -ti [container ID] /bin/bash\n starts a bash shell\nNote: Exiting from the terminal will not terminate the container\n\n\nDelete container\n\ndocker rm <container ID>\n\n\nDelete images\n\ndocker rmi [imageID|repo]\n\n\nDockerfile\n#\n\n\n\n\neach \nRUN\n forces a new commit\n\n\nno new commit if you chain commands with \n&&\n\n\nENTRYPOINT\n runs command that cant't be overwritten by paramaters. Instead, paramaters are passed as parameters to the ENTRYPOINT instruction\n\n\n\n\nBuild:\n\n\ndocker build [options] [path]\n\n\nExamples to build:\n\n\ndocker build -t [repository:tag] [path]\n to build specific tag\n\ndocker build -t thej/myimage:1.0 .\n to build from the current path as context\n\ndocker build -t thej/myimage:1.0 myproject\n to build from \nmyproject\n path as context\n\n\nDocker Volumes\n#\n\n\nA \nVolume\n is a designated directory in a container, which is designed to persist data, independent of the container's life cylce\n\n\n\n\nVolume changes are excluded when updating an image\n\n\npersist when a container is deleted\n\n\nCan be mapped to host a directory\n\n\nCan be shared between containers\n\n\n\n\nMount a volume\n#\n\n\n\n\nVolumes are mounted when creating or executing a container\n\n\ncan be mapped to a host directory\n\n\nvolume paths specified must be absolute\n\n\n\n\nExecute a new container and mount the directory /myvolume into its filesystem\n\ndocker run -d -P -v /myvolume nginx:latest\n\n\nExecute a new container an mape \n/data/src\n directory from the host into the \n/test/src\n directory in the container\n\ndocker run -i -t -v /data/src:/test/src nginx:latest\n\n\nVolumes in Dockerfile\n#\n\n\n\n\nVOLUME instruction creates a mountpoint\n\n\ncan specify arguments a JSON array or string\n\n\ncannot map volumes to host directories\n\n\nvolumes are initialized when the container is executed\n\n\n\n\nString example:\n\nVOLUME /myvol\n\n\nString examples with multiple volumes:\n\nVOLUME /myvol1 /test/src\n\n\nJSON example\n\nVOLUME [\"myvol\", \"myvl2\"]\n\n\nUses of volumes\n#\n\n\n\n\nde-couple the data that is stored from the container which created the data\n\n\ngood for sharing data between containers\n\n\ncan setup a data container which has a volume you mount in other containers\n\n\n\n\n\n\nmounting directories from the host is good for testing purposes but generally not recommended for production use\n\n\n\n\nNetworking\n#\n\n\nMapping ports\n#\n\n\n\n\ncontainers have their own network and IP address\n\n\nmap exposed container ports to ports on the host machine\n\n\nports can be manually mapped or auto mapped\n\n\nuses the -p and -P parameters in \ndocker run\n\n\n\n\nMaps port 80 on the container to 8080 on the host:\n\ndocker run -d -p 8080:80 nginx\n\n\nAutomapping ports\n#\n\n\n\n\nuse the \n-P\n option in \ndocker run\n\n\nautomatically maps exposed ports in the container to a port number in the host\n\n\nhost port numbers used go from 49154 to 65535\n\n\nonly works for ports defined in the EXPOSE instruction \n\n\n\n\nAuto map ports exposed by the NGINX contaoner to a port value on the host:\n\ndocker run -d -P nginx\n\n\nEXPOSE instruction\n#\n\n\n\n\nconfigures which ports a container will listen on at runtime\n\n\nports still need to me mapped when container is executed\n\n\n\n\nFROM ubuntu:14.04\nRUN apt-get update & apt-get install -y nginx\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n\n\n\n\nLinking containers\n#\n\n\nLinking is a communication method between containers which allows them to securely transfer data from one to antoher\n\n\n\n\nsource and recipient containers\n\n\nrecipient containers have access to data on source containers\n\n\nlinks are established based on container names\n\n\n\n\n---------------------------------------\n|                                     |   \n|  -------------    ---------------   |\n|  | --------  |    |  ---------- |   |\n|  | |webapp|  |    |  |database| |   |\n|  | --------  | -> |  ---------- |   |\n|  | container |    |  container  |   |\n|  -------------    ---------------   |\n|    recipient           source       |\n|                                     |\n|               host                  |\n---------------------------------------\n\n\n\n\n\ncreating a link\n#\n\n\n\n\ncreate soruce container first\n\n\n\n\ncreate the recipient container using the \n--link\n option\n\n\n\n\n\n\nBets practice: give the containers meaningful names\n\n\n\n\n\n\nCreate source container using postgres:\n\ndocker run -d --name database postgres\n\n\nCreate the recipient container and link it:\n\ndocker run -d -p 8080:80 --name website --link database:db nginx\n\nnote: \ndb\n is the alias\n\n\nUses of linking\n#\n\n\n\n\ncontainers can talk to each others without having to epose ports to the host\n\n\nessential for micro service applicatin architecture\n\n\nExample:\n\n\ncontainer with tomcat running\n\n\ncontainer with MySQL running\n\n\napplication on tomcat need to connect to MySQL",
            "title": "Docker"
        },
        {
            "location": "/linux/docker/#docker-overview",
            "text": "",
            "title": "Docker Overview"
        },
        {
            "location": "/linux/docker/#what-is-docker",
            "text": "container based virtualization, uses the kernel on the host's OS to run multiple guest instances  each guest instance is called a  container  each container has its own:  root filesystem  processes  memory  devices  network ports  each container has its own libraries",
            "title": "What is docker?"
        },
        {
            "location": "/linux/docker/#benefits-of-docker",
            "text": "portable between platforms  not a VM: only contains the application + required libraries  Scalability: easily spin uo new containers if needed  run more apss on one host machine",
            "title": "Benefits of Docker"
        },
        {
            "location": "/linux/docker/#docker-concepts-and-terminology",
            "text": "",
            "title": "Docker concepts and terminology"
        },
        {
            "location": "/linux/docker/#docker-engine",
            "text": "daemon that enables containers to be built, shipped and run  uses Linux kernel namespaces and control groups (cgroups)  namespaces give us the isolated workspace",
            "title": "Docker Engine"
        },
        {
            "location": "/linux/docker/#namespaces-used",
            "text": "pid  net  ipc  mnt  uts",
            "title": "Namespaces used:"
        },
        {
            "location": "/linux/docker/#docker-containers-and-images",
            "text": "",
            "title": "Docker containers and images"
        },
        {
            "location": "/linux/docker/#images",
            "text": "read-only template to create containers  built by you or other Docker-users  stored in the Docker Hub or local registry  inside a registry are multiple repositories, that can contain multiple images",
            "title": "Images"
        },
        {
            "location": "/linux/docker/#containers",
            "text": "Isolated application platform  Contains everything needed to run your application  base on one or more images",
            "title": "Containers"
        },
        {
            "location": "/linux/docker/#docker-hub",
            "text": "App store for docker",
            "title": "Docker Hub"
        },
        {
            "location": "/linux/docker/#docker-orchastration",
            "text": "3 tools for orchastrating distributed applications:   Docker Machine : Tool that provisions Docker hosts and installs the Docker engine on them  Docker Swarm : Tool that clusters many Engines and schedules containers  Docker Compose : Tool to create and manage multi-container applications",
            "title": "Docker Orchastration"
        },
        {
            "location": "/linux/docker/#docker-images",
            "text": "",
            "title": "Docker Images"
        },
        {
            "location": "/linux/docker/#docker-fundamentals",
            "text": "docker commit [options] [container ID] [repository[:tag]]  saves changes to a container  Example:  docker commit 25442324 thej/myapplication:1.0  Show docker containers docker ps -a  Start image as daemon: docker run -d nginx  Start a container using container ID docker start <container ID>  Stop a container using container ID docker stop <container ID>  Start another process within a container: docker exec -ti [container ID] /bin/bash  starts a bash shell\nNote: Exiting from the terminal will not terminate the container  Delete container docker rm <container ID>  Delete images docker rmi [imageID|repo]",
            "title": "Docker Fundamentals"
        },
        {
            "location": "/linux/docker/#dockerfile",
            "text": "each  RUN  forces a new commit  no new commit if you chain commands with  &&  ENTRYPOINT  runs command that cant't be overwritten by paramaters. Instead, paramaters are passed as parameters to the ENTRYPOINT instruction   Build:  docker build [options] [path]  Examples to build:  docker build -t [repository:tag] [path]  to build specific tag docker build -t thej/myimage:1.0 .  to build from the current path as context docker build -t thej/myimage:1.0 myproject  to build from  myproject  path as context",
            "title": "Dockerfile"
        },
        {
            "location": "/linux/docker/#docker-volumes",
            "text": "A  Volume  is a designated directory in a container, which is designed to persist data, independent of the container's life cylce   Volume changes are excluded when updating an image  persist when a container is deleted  Can be mapped to host a directory  Can be shared between containers",
            "title": "Docker Volumes"
        },
        {
            "location": "/linux/docker/#mount-a-volume",
            "text": "Volumes are mounted when creating or executing a container  can be mapped to a host directory  volume paths specified must be absolute   Execute a new container and mount the directory /myvolume into its filesystem docker run -d -P -v /myvolume nginx:latest  Execute a new container an mape  /data/src  directory from the host into the  /test/src  directory in the container docker run -i -t -v /data/src:/test/src nginx:latest",
            "title": "Mount a volume"
        },
        {
            "location": "/linux/docker/#volumes-in-dockerfile",
            "text": "VOLUME instruction creates a mountpoint  can specify arguments a JSON array or string  cannot map volumes to host directories  volumes are initialized when the container is executed   String example: VOLUME /myvol  String examples with multiple volumes: VOLUME /myvol1 /test/src  JSON example VOLUME [\"myvol\", \"myvl2\"]",
            "title": "Volumes in Dockerfile"
        },
        {
            "location": "/linux/docker/#uses-of-volumes",
            "text": "de-couple the data that is stored from the container which created the data  good for sharing data between containers  can setup a data container which has a volume you mount in other containers    mounting directories from the host is good for testing purposes but generally not recommended for production use",
            "title": "Uses of volumes"
        },
        {
            "location": "/linux/docker/#networking",
            "text": "",
            "title": "Networking"
        },
        {
            "location": "/linux/docker/#mapping-ports",
            "text": "containers have their own network and IP address  map exposed container ports to ports on the host machine  ports can be manually mapped or auto mapped  uses the -p and -P parameters in  docker run   Maps port 80 on the container to 8080 on the host: docker run -d -p 8080:80 nginx",
            "title": "Mapping ports"
        },
        {
            "location": "/linux/docker/#automapping-ports",
            "text": "use the  -P  option in  docker run  automatically maps exposed ports in the container to a port number in the host  host port numbers used go from 49154 to 65535  only works for ports defined in the EXPOSE instruction    Auto map ports exposed by the NGINX contaoner to a port value on the host: docker run -d -P nginx",
            "title": "Automapping ports"
        },
        {
            "location": "/linux/docker/#expose-instruction",
            "text": "configures which ports a container will listen on at runtime  ports still need to me mapped when container is executed   FROM ubuntu:14.04\nRUN apt-get update & apt-get install -y nginx\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]",
            "title": "EXPOSE instruction"
        },
        {
            "location": "/linux/docker/#linking-containers",
            "text": "Linking is a communication method between containers which allows them to securely transfer data from one to antoher   source and recipient containers  recipient containers have access to data on source containers  links are established based on container names   ---------------------------------------\n|                                     |   \n|  -------------    ---------------   |\n|  | --------  |    |  ---------- |   |\n|  | |webapp|  |    |  |database| |   |\n|  | --------  | -> |  ---------- |   |\n|  | container |    |  container  |   |\n|  -------------    ---------------   |\n|    recipient           source       |\n|                                     |\n|               host                  |\n---------------------------------------",
            "title": "Linking containers"
        },
        {
            "location": "/linux/docker/#creating-a-link",
            "text": "create soruce container first   create the recipient container using the  --link  option    Bets practice: give the containers meaningful names    Create source container using postgres: docker run -d --name database postgres  Create the recipient container and link it: docker run -d -p 8080:80 --name website --link database:db nginx \nnote:  db  is the alias",
            "title": "creating a link"
        },
        {
            "location": "/linux/docker/#uses-of-linking",
            "text": "containers can talk to each others without having to epose ports to the host  essential for micro service applicatin architecture  Example:  container with tomcat running  container with MySQL running  application on tomcat need to connect to MySQL",
            "title": "Uses of linking"
        },
        {
            "location": "/linux/encrypt_system_ssd/",
            "text": "Encrypt SSD with LUKS and LVM\n#\n\n\nIMPORTANT NOTES\n#\n\n\nSome important notes to consider before encryption.\n\n\nUse hdparm instead of BIOS password for hardware self-encryption\n#\n\n\nSince BIOS passwords can make encryption keys unusable on other systems (due to hashes etc.), you should use hdparm.\n\n\nSee https://www.zeitgeist.se/2014/09/07/enabling-ata-security-on-a-self-encrypting-ssd/ for detailed explanations.\n\n\nPartition table\n#\n\n\n\n\n200MB, type EF00 (EFI partition). This is used by GRUB2/BIOS-GPT. (/dev/sda1)\n\n\n100MB, type 8300 (Linux). This will store /boot (/dev/sda2)\n\n\n8GB, type 8200 (swap). This is our dedicated swap partition (not part of lvm). (/dev/sda3)\n\n\nRemaining space, type 8E00 (LVM). Store both / and /home. (/dev/sda4).\n\n\n\n\nSo we get the following partition table:\n\n\nsudo fdisk -l /dev/sda\nDisk /dev/sdb: 238.5 GiB, 256060514304 bytes, 500118192 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: 2745CF02-2F53-4647-9EDF-0D7FA8DA3110\n\nDevice        Start       End   Sectors   Size Type\n/dev/sda1      2048   1026047   1024000   500M EFI System\n/dev/sda2   1026048   1435647    409600   200M Linux filesystem\n/dev/sda3   1435648  18212863  16777216     8G Linux swap\n/dev/sda4  18212864 500118158 481905295 229.8G Linux LVM\n\n\n\n\n\nPrepare encrypted LUKS space\n#\n\n\nWe need to align, enable TRIM and use the right payload for SSD.\n\n\nsudo  cryptsetup  benchmark\n  sudo cryptsetup -c aes-xts-plain --key-size 512 -y -h sha512 --align-payload=8192 luksFormat /dev/sda4\n  sudo cryptsetup luksOpen --allow-discards /dev/sda4 enc-lvm\n\n\nSetup LVM space\n#\n\n\nsudo lvm pvcreate --dataalignment 4M /dev/mapper/enc-lvm\nsudo lvm vgcreate vgroup /dev/mapper/enc-lvm\nsudo lvm lvcreate -L 30GB -n root vgroup\nsudo lvm lvcreate -n root -L 30G vgroup\n### sudo lvm lvcreate -n home -l 100%FREE vgroup  ## not recommended if you want  to  keep  some free space for snapshots\n### sudo lvm lvcreate -n home -L 400GB -n home vgroup\n\n\n\n\n\nConfigure block devices, filesystems, and mountpoints\n#\n\n\nFormat /boot, /root and /home\n#\n\n\nFormat and enable TRIM support.\n\n\nsudo mkfs.ext2 /dev/sda2\nsudo mkfs.ext4 -E discard /dev/mapper/vgroup-root\nsudo mkfs.ext4 -E discard /dev/mapper/vgroup-home\n\n\n\n\n\nGet 5% space from /home partition\n#\n\n\n5% space are by default hidden on ext4 partitions. This is typically used on root partition as a safeguard when the disk gets full. On non-root partition this hidden space can be easily and safely reclaimed back by using the following command.\n\n\nsudo tune2fs -m 0 /dev/mapper/vgroup-home\n\n\nInstallation\n#\n\n\nInstall your system via CLI or  GUI installer.\n\n\nDo  not reboot after installation is finnished.\n\n\nMount  and  chroot into newly installed  system\n#\n\n\nsudo cryptsetup luksOpen --allow-discards /dev/sda4 enc-lvm\nsudo mount /dev/mapper/vgroup-root /mnt/\nsudo mount /dev/mapper/vgroup-home /mnt/home/\nsudo  mount  /dev/sda2 /mnt/boot/\nsudo  mount  /dev/sda1 /mnt/boot/efi/\nsudo  mount -t proc proc /mnt/proc\nsudo  mount -t sysfs sys /mnt/sys\nsudo mount -o bind /dev /mnt/dev\nsudo  mount -t devpts pts /mnt/dev/pts/\nsudo chroot /mnt/\n\n\n\n\n\nConfigure and build ramdisk\n#\n\n\nEdit MODULES and HOOKS in \n/etc/mkinitcpio.conf\n\n\nMODULES=\"dm_mod dm_crypt ext4 aes_x86_64 sha256 sha512\"\n\n\nAadd \nencrypt\n and \nlvm2\n prior to \nfilesystem\n and \nresume\n under the HOOKS section:\n\n\nHOOKS=\"base udev autodetect modconf block keyboard keymap plymouth plymouth-encrypt lvm2 resume filesystems fsck\"\n\n\nRebuild kernel's ramdisk:\n\n\nmkinitcpio -p linux\n\n\nThe version string represents your current kernel. For example \"linux318\" if you're running kernel 3.18\n\n\nmkinitcpio -p linux318\n\n\nAdjust GRUB config\n#\n\n\nEdit \n/etc/defaults/grub\n and adjust as follows:\n\n\nGRUB_CMDLINE_LINUX=\"cryptdevice=/dev/sda4:vgroup:allow-discards\"\n# if your want to use UUIDs (get with \"blkid /dev/sda\"):\n# GRUB_CMDLINE_LINUX=\"cryptdevice=/dev/disk/by-uuid/8c57b57b-9714-40eb-9b4d-13f8a67c164b:vgroup:allow-discards\"\n\n\n\n\n\nIf you don't want to enable TRIM support, leave out the \nallow-discards\n option.\n\n\nMount Flags\n#\n\n\nEdit /mnt/etc/fstab to add TRIM support\n\n\n# <file system>                           <mount point>  <type>  <options>  <dump>  <pass>\n/dev/mapper/vgroup-home            /home      ext4    defaults,noatime,discard 0 2\n/dev/mapper/vgroup-root            /          ext4    defaults,noatime,discard 0 1\n# using UUIDs (blkid /dev/mapper/vgroup-root)\n# UUID=cc323893-0ee3-42b1-af8c-9f3bdde904e7 /home          ext4    defaults,noatime 0       2\n# UUID=8c57b57b-9714-40eb-9b4d-13f8a67c164b /              ext4    defaults,noatime,discard 0       1\n\nUUID=f6c7a434-278b-4e65-baea-5b8baffec853 swap           swap    defaults,noatime,discard 0       2\nUUID=CA3B-BF7A                            /boot/efi      vfat    defaults,noatime 0       2\nUUID=15197f00-0536-4847-96f0-2d33204adf0f /boot          ext2    defaults,noatime 0       2\n\n\n\n\n\nWe're done und you finally can safely reboot into your new system ;)",
            "title": "Encrypt system ssd"
        },
        {
            "location": "/linux/encrypt_system_ssd/#encrypt-ssd-with-luks-and-lvm",
            "text": "",
            "title": "Encrypt SSD with LUKS and LVM"
        },
        {
            "location": "/linux/encrypt_system_ssd/#important-notes",
            "text": "Some important notes to consider before encryption.",
            "title": "IMPORTANT NOTES"
        },
        {
            "location": "/linux/encrypt_system_ssd/#use-hdparm-instead-of-bios-password-for-hardware-self-encryption",
            "text": "Since BIOS passwords can make encryption keys unusable on other systems (due to hashes etc.), you should use hdparm.  See https://www.zeitgeist.se/2014/09/07/enabling-ata-security-on-a-self-encrypting-ssd/ for detailed explanations.",
            "title": "Use hdparm instead of BIOS password for hardware self-encryption"
        },
        {
            "location": "/linux/encrypt_system_ssd/#partition-table",
            "text": "200MB, type EF00 (EFI partition). This is used by GRUB2/BIOS-GPT. (/dev/sda1)  100MB, type 8300 (Linux). This will store /boot (/dev/sda2)  8GB, type 8200 (swap). This is our dedicated swap partition (not part of lvm). (/dev/sda3)  Remaining space, type 8E00 (LVM). Store both / and /home. (/dev/sda4).   So we get the following partition table:  sudo fdisk -l /dev/sda\nDisk /dev/sdb: 238.5 GiB, 256060514304 bytes, 500118192 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: 2745CF02-2F53-4647-9EDF-0D7FA8DA3110\n\nDevice        Start       End   Sectors   Size Type\n/dev/sda1      2048   1026047   1024000   500M EFI System\n/dev/sda2   1026048   1435647    409600   200M Linux filesystem\n/dev/sda3   1435648  18212863  16777216     8G Linux swap\n/dev/sda4  18212864 500118158 481905295 229.8G Linux LVM",
            "title": "Partition table"
        },
        {
            "location": "/linux/encrypt_system_ssd/#prepare-encrypted-luks-space",
            "text": "We need to align, enable TRIM and use the right payload for SSD.  sudo  cryptsetup  benchmark\n  sudo cryptsetup -c aes-xts-plain --key-size 512 -y -h sha512 --align-payload=8192 luksFormat /dev/sda4\n  sudo cryptsetup luksOpen --allow-discards /dev/sda4 enc-lvm",
            "title": "Prepare encrypted LUKS space"
        },
        {
            "location": "/linux/encrypt_system_ssd/#setup-lvm-space",
            "text": "sudo lvm pvcreate --dataalignment 4M /dev/mapper/enc-lvm\nsudo lvm vgcreate vgroup /dev/mapper/enc-lvm\nsudo lvm lvcreate -L 30GB -n root vgroup\nsudo lvm lvcreate -n root -L 30G vgroup\n### sudo lvm lvcreate -n home -l 100%FREE vgroup  ## not recommended if you want  to  keep  some free space for snapshots\n### sudo lvm lvcreate -n home -L 400GB -n home vgroup",
            "title": "Setup LVM space"
        },
        {
            "location": "/linux/encrypt_system_ssd/#configure-block-devices-filesystems-and-mountpoints",
            "text": "",
            "title": "Configure block devices, filesystems, and mountpoints"
        },
        {
            "location": "/linux/encrypt_system_ssd/#format-boot-root-and-home",
            "text": "Format and enable TRIM support.  sudo mkfs.ext2 /dev/sda2\nsudo mkfs.ext4 -E discard /dev/mapper/vgroup-root\nsudo mkfs.ext4 -E discard /dev/mapper/vgroup-home",
            "title": "Format /boot, /root and /home"
        },
        {
            "location": "/linux/encrypt_system_ssd/#get-5-space-from-home-partition",
            "text": "5% space are by default hidden on ext4 partitions. This is typically used on root partition as a safeguard when the disk gets full. On non-root partition this hidden space can be easily and safely reclaimed back by using the following command.  sudo tune2fs -m 0 /dev/mapper/vgroup-home",
            "title": "Get 5% space from /home partition"
        },
        {
            "location": "/linux/encrypt_system_ssd/#installation",
            "text": "Install your system via CLI or  GUI installer.  Do  not reboot after installation is finnished.",
            "title": "Installation"
        },
        {
            "location": "/linux/encrypt_system_ssd/#mount-and-chroot-into-newly-installed-system",
            "text": "sudo cryptsetup luksOpen --allow-discards /dev/sda4 enc-lvm\nsudo mount /dev/mapper/vgroup-root /mnt/\nsudo mount /dev/mapper/vgroup-home /mnt/home/\nsudo  mount  /dev/sda2 /mnt/boot/\nsudo  mount  /dev/sda1 /mnt/boot/efi/\nsudo  mount -t proc proc /mnt/proc\nsudo  mount -t sysfs sys /mnt/sys\nsudo mount -o bind /dev /mnt/dev\nsudo  mount -t devpts pts /mnt/dev/pts/\nsudo chroot /mnt/",
            "title": "Mount  and  chroot into newly installed  system"
        },
        {
            "location": "/linux/encrypt_system_ssd/#configure-and-build-ramdisk",
            "text": "Edit MODULES and HOOKS in  /etc/mkinitcpio.conf  MODULES=\"dm_mod dm_crypt ext4 aes_x86_64 sha256 sha512\"  Aadd  encrypt  and  lvm2  prior to  filesystem  and  resume  under the HOOKS section:  HOOKS=\"base udev autodetect modconf block keyboard keymap plymouth plymouth-encrypt lvm2 resume filesystems fsck\"  Rebuild kernel's ramdisk:  mkinitcpio -p linux  The version string represents your current kernel. For example \"linux318\" if you're running kernel 3.18  mkinitcpio -p linux318",
            "title": "Configure and build ramdisk"
        },
        {
            "location": "/linux/encrypt_system_ssd/#adjust-grub-config",
            "text": "Edit  /etc/defaults/grub  and adjust as follows:  GRUB_CMDLINE_LINUX=\"cryptdevice=/dev/sda4:vgroup:allow-discards\"\n# if your want to use UUIDs (get with \"blkid /dev/sda\"):\n# GRUB_CMDLINE_LINUX=\"cryptdevice=/dev/disk/by-uuid/8c57b57b-9714-40eb-9b4d-13f8a67c164b:vgroup:allow-discards\"  If you don't want to enable TRIM support, leave out the  allow-discards  option.",
            "title": "Adjust GRUB config"
        },
        {
            "location": "/linux/encrypt_system_ssd/#mount-flags",
            "text": "Edit /mnt/etc/fstab to add TRIM support  # <file system>                           <mount point>  <type>  <options>  <dump>  <pass>\n/dev/mapper/vgroup-home            /home      ext4    defaults,noatime,discard 0 2\n/dev/mapper/vgroup-root            /          ext4    defaults,noatime,discard 0 1\n# using UUIDs (blkid /dev/mapper/vgroup-root)\n# UUID=cc323893-0ee3-42b1-af8c-9f3bdde904e7 /home          ext4    defaults,noatime 0       2\n# UUID=8c57b57b-9714-40eb-9b4d-13f8a67c164b /              ext4    defaults,noatime,discard 0       1\n\nUUID=f6c7a434-278b-4e65-baea-5b8baffec853 swap           swap    defaults,noatime,discard 0       2\nUUID=CA3B-BF7A                            /boot/efi      vfat    defaults,noatime 0       2\nUUID=15197f00-0536-4847-96f0-2d33204adf0f /boot          ext2    defaults,noatime 0       2  We're done und you finally can safely reboot into your new system ;)",
            "title": "Mount Flags"
        },
        {
            "location": "/linux/iptables/",
            "text": "Firewall\n#\n\n\nBasic concepts\n#\n\n\n                               \nXXXXXXXXXXXXXXXXXX\n\n                             \nXXX\n     \nNetwork\n    \nXXX\n\n                               \nXXXXXXXXXXXXXXXXXX\n\n                                       \n+\n\n                                       \n|\n\n                                       \nv\n\n \n+-------------+\n              \n+------------------+\n\n \n|\ntable\n:\n \nfilter\n|\n \n<---+\n        \n|\n \ntable\n:\n \nnat\n       \n|\n\n \n|\nchain\n:\n \nINPUT\n \n|\n     \n|\n        \n|\n \nchain\n:\n \nPREROUTING\n|\n\n \n+-----+-------+\n     \n|\n        \n+--------+---------+\n\n       \n|\n             \n|\n                 \n|\n\n       \nv\n             \n|\n                 \nv\n\n \n[\nlocal\n \nprocess\n]\n     \n|\n           \n****************\n          \n+--------------+\n\n       \n|\n             \n+---------+\n \nRouting\n \ndecision\n \n+------>\n \n|\ntable\n:\n \nfilter\n \n|\n\n       \nv\n                         \n****************\n          \n|\nchain\n:\n \nFORWARD\n|\n\n\n****************\n                                           \n+------+-------+\n\n\nRouting\n \ndecision\n                                                  \n|\n\n\n****************\n                                                  \n|\n\n       \n|\n                                                          \n|\n\n       \nv\n                        \n****************\n                  \n|\n\n\n+-------------+\n       \n+------>\n  \nRouting\n \ndecision\n  \n<---------------+\n\n\n|\ntable\n:\n \nnat\n   \n|\n       \n|\n         \n****************\n\n\n|\nchain\n:\n \nOUTPUT\n|\n       \n|\n               \n+\n\n\n+-----+-------+\n       \n|\n               \n|\n\n      \n|\n               \n|\n               \nv\n\n      \nv\n               \n|\n      \n+-------------------+\n\n\n+--------------+\n      \n|\n      \n|\n \ntable\n:\n \nnat\n        \n|\n\n\n|\ntable\n:\n \nfilter\n \n|\n \n+----+\n      \n|\n \nchain\n:\n \nPOSTROUTING\n|\n\n\n|\nchain\n:\n \nOUTPUT\n \n|\n             \n+--------+----------+\n\n\n+--------------+\n                      \n|\n\n                                      \nv\n\n                               \nXXXXXXXXXXXXXXXXXX\n\n                             \nXXX\n    \nNetwork\n     \nXXX\n\n                               \nXXXXXXXXXXXXXXXXXX\n\n\n\n\n\n\nBest practices\n#\n\n\n\n\nplace loopback rules as early as possible\n\n\nplace forwading rules as early as possible\n\n\nuse state and connection tracking to bypass firewall for established connections\n\n\ncombine rules using port lists\n\n\nplace rues for heavy traffic services as early as possible\n\n\n\n\nExample basic configuration\n#\n\n\nInterfaces used:\n#\n\n\n\n\nlan0: internal network\n\n\nwan0: external network/internet\n\n\nlxcbr0: DMZ\n\n\n\n\nFirewall Script\n#\n\n\n#!/bin/sh\n\n\n\n# CONFIG\n\n\n##############################\n\n\n# Where to find iptables command\n\n\nIPT\n=\n/sbin/iptables\n\n\nSERVER_IP\n=\n\"192.168.222.28\"\n\n\nWAN_IP\n=\n\"192.168.188.84\"\n\n\nDMZ_IP\n=\n\"10.200.200.222\"\n\n\n\nWAN_IF\n=\n\"wan0\"\n\n\nLAN_IF\n=\n\"lan0\"\n\n\nDMZ_IF\n=\n\"br0\"\n\n\n\nLAN_NET\n=\n\"192.168.222.0/24\"\n\n\nWAN_NET\n=\n\"192.168.188.0/24\"\n\n\nDMZ_NET\n=\n\"10.0.0.0/8\"\n\n\n\n# Private, multicast, loopback and reserved networks\n\n\nLOOPBACK\n=\n\"127.0.0.0/8\"\n\n\nCLASS_A\n=\n\"10.0.0.0/8\"\n\n\nCLASS_B\n=\n\"172.16.0.0/12\"\n\n\nCLASS_C\n=\n\"192.168.0.0/16\"\n\n\nCLASS_D_MULTICAST\n=\n\"224.0.0.0/4\"\n\n\nCLASS_E_RESERVED\n=\n\"240.0.0.0/5\"\n\n\n\n\n###############################\n\n\n\n# Flush all existing rules\n\n\n$IPT\n -F\n\n$IPT\n -X\n\n$IPT\n -t nat -F\n\n$IPT\n -t nat -X\n\n$IPT\n -t mangle -F\n\n$IPT\n -t mangle -X\n\n$IPT\n -P INPUT ACCEPT\n\n$IPT\n -P FORWARD ACCEPT\n\n$IPT\n -P OUTPUT ACCEPT\n\n\n# Default policies\n\n\n$IPT\n -P OUTPUT ACCEPT\n\n$IPT\n -P INPUT DROP\n\n$IPT\n -P FORWARD DROP\n\n\n# Allow lo interface\n\n\n$IPT\n -A INPUT -i lo -j ACCEPT\n\n$IPT\n -A OUTPUT -o lo -j ACCEPT \n\n\n# Allow already established sessions\n\n\n$IPT\n -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n\n$IPT\n -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n\n\n# Drop invalid packages\n\n\n$IPT\n -A INPUT -m conntrack --ctstate INVALID -j DROP\n\n\n# Refuse spoofed packets pretending to be from the external interfaces IP\n\n\n# $IPT -A INPUT -i $WAN_IF -s $IPADDR -j DROP\n\n\n\n# Refuse packets claiming to be from private networks or loopback device\n\n\n$IPT\n -A INPUT -i \n$WAN_IF\n -s \n$CLASS_A\n -j DROP\n\n$IPT\n -A INPUT -i \n$WAN_IF\n -s \n$CLASS_B\n -j DROP\n\n#$IPT -A INPUT -i $WAN_IF -s $CLASS_C -j DROP\n\n\n$IPT\n -A INPUT -i \n$WAN_IF\n -s \n$LOOPBACK\n -j DROP\n\n\n# Allow SSH to $SERVER_IP\n\n\n$IPT\n -A INPUT -p tcp -s \n$LAN_NET\n -d \n$SERVER_IP\n --dport \n22\n -i \n$LAN_IF\n -j ACCEPT\n\n$IPT\n -A INPUT -p tcp -s \n$WAN_NET\n -d \n$WAN_IP\n --dport \n22\n -i \n$WAN_IF\n -j ACCEPT\n\n#$IPT -A INPUT -p tcp -s 0/0 -d $SERVER_IP --dport 22 -i $WAN_IF -j ACCEPT\n\n\n\n# Enable masquerading for lan0/br0\n\n\n$IPT\n -t nat -A POSTROUTING -o \n$LAN_IF\n -j MASQUERADE\n\n$IPT\n -t nat -A POSTROUTING -s \n$DMZ_NET\n -j MASQUERADE\n\n\n# Allow forwarding on bridge interface\n\n\n$IPT\n -A FORWARD -p all -i \n$DMZ_IF\n -j ACCEPT\n\n\n# allow traffic from internal ($LAN_IF) to DMZ ($DMZ_IF)\n\n\n$IPT\n -A FORWARD -i \n$LAN_IF\n -o \n$DMZ_IF\n -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT\n\n$IPT\n -A FORWARD -i \n$DMZ_IF\n -o \n$LAN_IF\n -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n\n# allow traffic from internet ($WAN_IF) to DMZ ($DMZ_IF)\n\n\n$IPT\n -A FORWARD -i \n$WAN_IF\n -o \n$DMZ_IF\n -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT\n\n$IPT\n -A FORWARD -i \n$DMZ_IF\n -o \n$WAN_IF\n -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n\n\n########################\n\n\n### PORT FORWARDING ####\n\n\n########################\n\n\n\n# redirect incoming web requests (port 80,443) at $WAN_IF ($WAN_IP) of FIREWALL to web server at $DMZ_IP\n\n\n$IPT\n -t nat -A PREROUTING -p tcp -i \n$WAN_IF\n -d \n$WAN_IP\n --dport \n80\n -j DNAT --to-dest \n$DMZ_IP\n\n\n$IPT\n -t nat -A PREROUTING -p tcp -i \n$WAN_IF\n -d \n$WAN_IP\n --dport \n443\n -j DNAT --to-dest \n$DMZ_IP\n\n\n\n# redirect port 2345 to $DMZ_IP\n\n\n$IPT\n -t nat -A PREROUTING -p tcp -i \n$LAN_IF\n -d \n$SERVER_IP\n --dport \n2345\n -j DNAT --to-dest \n$DMZ_IP\n:22\n\n$IPT\n -t nat -A PREROUTING -p tcp -i \n$WAN_IF\n -d \n$WAN_IP\n --dport \n2345\n -j DNAT --to-dest \n$DMZ_IP\n:22\n\n\n# redirect incoming mail (SMTP) requests at $WAN_IF ($WAN_IP) of FIREWALL to Mail server at 192.168.20.3\n\n\n#iptables -t nat -A PREROUTING -p tcp -i $WAN_IF -d $WAN_IP --dport 25 -j DNAT --to-dest 192.168.20.3\n\n\n\n# redirect incoming DNS requests at $WAN_IF ($WAN_IP) of FIREWALL to DNS server at 192.168.20.4\n\n\n#iptables -t nat -A PREROUTING -p udp -i $WAN_IF -d $WAN_IP --dport 53 -j DNAT --to-dest 192.168.20.4\n\n\n#iptables -t nat -A PREROUTING -p tcp -i $WAN_IF -d $WAN_IP --dport 53 -j DNAT --to-dest 192.168.20.4\n\n\n\n\n\n\nStop the firewall\n#\n\n\n#!/bin/sh\n\niptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\niptables -P INPUT ACCEPT\niptables -P FORWARD ACCEPT\niptables -P OUTPUT ACCEPT",
            "title": "Iptables"
        },
        {
            "location": "/linux/iptables/#firewall",
            "text": "",
            "title": "Firewall"
        },
        {
            "location": "/linux/iptables/#basic-concepts",
            "text": "XXXXXXXXXXXXXXXXXX \n                              XXX       Network      XXX \n                                XXXXXXXXXXXXXXXXXX \n                                        + \n                                        | \n                                        v \n  +-------------+                +------------------+ \n  | table :   filter |   <---+          |   table :   nat         | \n  | chain :   INPUT   |       |          |   chain :   PREROUTING | \n  +-----+-------+       |          +--------+---------+ \n        |               |                   | \n        v               |                   v \n  [ local   process ]       |             ****************            +--------------+ \n        |               +---------+   Routing   decision   +------>   | table :   filter   | \n        v                           ****************            | chain :   FORWARD |  ****************                                             +------+-------+  Routing   decision                                                    |  ****************                                                    | \n        |                                                            | \n        v                          ****************                    |  +-------------+         +------>    Routing   decision    <---------------+  | table :   nat     |         |           ****************  | chain :   OUTPUT |         |                 +  +-----+-------+         |                 | \n       |                 |                 v \n       v                 |        +-------------------+  +--------------+        |        |   table :   nat          |  | table :   filter   |   +----+        |   chain :   POSTROUTING |  | chain :   OUTPUT   |               +--------+----------+  +--------------+                        | \n                                       v \n                                XXXXXXXXXXXXXXXXXX \n                              XXX      Network       XXX \n                                XXXXXXXXXXXXXXXXXX",
            "title": "Basic concepts"
        },
        {
            "location": "/linux/iptables/#best-practices",
            "text": "place loopback rules as early as possible  place forwading rules as early as possible  use state and connection tracking to bypass firewall for established connections  combine rules using port lists  place rues for heavy traffic services as early as possible",
            "title": "Best practices"
        },
        {
            "location": "/linux/iptables/#example-basic-configuration",
            "text": "",
            "title": "Example basic configuration"
        },
        {
            "location": "/linux/iptables/#interfaces-used",
            "text": "lan0: internal network  wan0: external network/internet  lxcbr0: DMZ",
            "title": "Interfaces used:"
        },
        {
            "location": "/linux/iptables/#firewall-script",
            "text": "#!/bin/sh  # CONFIG  ##############################  # Where to find iptables command  IPT = /sbin/iptables SERVER_IP = \"192.168.222.28\"  WAN_IP = \"192.168.188.84\"  DMZ_IP = \"10.200.200.222\"  WAN_IF = \"wan0\"  LAN_IF = \"lan0\"  DMZ_IF = \"br0\"  LAN_NET = \"192.168.222.0/24\"  WAN_NET = \"192.168.188.0/24\"  DMZ_NET = \"10.0.0.0/8\"  # Private, multicast, loopback and reserved networks  LOOPBACK = \"127.0.0.0/8\"  CLASS_A = \"10.0.0.0/8\"  CLASS_B = \"172.16.0.0/12\"  CLASS_C = \"192.168.0.0/16\"  CLASS_D_MULTICAST = \"224.0.0.0/4\"  CLASS_E_RESERVED = \"240.0.0.0/5\"  ###############################  # Flush all existing rules  $IPT  -F $IPT  -X $IPT  -t nat -F $IPT  -t nat -X $IPT  -t mangle -F $IPT  -t mangle -X $IPT  -P INPUT ACCEPT $IPT  -P FORWARD ACCEPT $IPT  -P OUTPUT ACCEPT # Default policies  $IPT  -P OUTPUT ACCEPT $IPT  -P INPUT DROP $IPT  -P FORWARD DROP # Allow lo interface  $IPT  -A INPUT -i lo -j ACCEPT $IPT  -A OUTPUT -o lo -j ACCEPT  # Allow already established sessions  $IPT  -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT $IPT  -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT # Drop invalid packages  $IPT  -A INPUT -m conntrack --ctstate INVALID -j DROP # Refuse spoofed packets pretending to be from the external interfaces IP  # $IPT -A INPUT -i $WAN_IF -s $IPADDR -j DROP  # Refuse packets claiming to be from private networks or loopback device  $IPT  -A INPUT -i  $WAN_IF  -s  $CLASS_A  -j DROP $IPT  -A INPUT -i  $WAN_IF  -s  $CLASS_B  -j DROP #$IPT -A INPUT -i $WAN_IF -s $CLASS_C -j DROP  $IPT  -A INPUT -i  $WAN_IF  -s  $LOOPBACK  -j DROP # Allow SSH to $SERVER_IP  $IPT  -A INPUT -p tcp -s  $LAN_NET  -d  $SERVER_IP  --dport  22  -i  $LAN_IF  -j ACCEPT $IPT  -A INPUT -p tcp -s  $WAN_NET  -d  $WAN_IP  --dport  22  -i  $WAN_IF  -j ACCEPT #$IPT -A INPUT -p tcp -s 0/0 -d $SERVER_IP --dport 22 -i $WAN_IF -j ACCEPT  # Enable masquerading for lan0/br0  $IPT  -t nat -A POSTROUTING -o  $LAN_IF  -j MASQUERADE $IPT  -t nat -A POSTROUTING -s  $DMZ_NET  -j MASQUERADE # Allow forwarding on bridge interface  $IPT  -A FORWARD -p all -i  $DMZ_IF  -j ACCEPT # allow traffic from internal ($LAN_IF) to DMZ ($DMZ_IF)  $IPT  -A FORWARD -i  $LAN_IF  -o  $DMZ_IF  -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT $IPT  -A FORWARD -i  $DMZ_IF  -o  $LAN_IF  -m state --state ESTABLISHED,RELATED -j ACCEPT # allow traffic from internet ($WAN_IF) to DMZ ($DMZ_IF)  $IPT  -A FORWARD -i  $WAN_IF  -o  $DMZ_IF  -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT $IPT  -A FORWARD -i  $DMZ_IF  -o  $WAN_IF  -m state --state ESTABLISHED,RELATED -j ACCEPT ########################  ### PORT FORWARDING ####  ########################  # redirect incoming web requests (port 80,443) at $WAN_IF ($WAN_IP) of FIREWALL to web server at $DMZ_IP  $IPT  -t nat -A PREROUTING -p tcp -i  $WAN_IF  -d  $WAN_IP  --dport  80  -j DNAT --to-dest  $DMZ_IP  $IPT  -t nat -A PREROUTING -p tcp -i  $WAN_IF  -d  $WAN_IP  --dport  443  -j DNAT --to-dest  $DMZ_IP  # redirect port 2345 to $DMZ_IP  $IPT  -t nat -A PREROUTING -p tcp -i  $LAN_IF  -d  $SERVER_IP  --dport  2345  -j DNAT --to-dest  $DMZ_IP :22 $IPT  -t nat -A PREROUTING -p tcp -i  $WAN_IF  -d  $WAN_IP  --dport  2345  -j DNAT --to-dest  $DMZ_IP :22 # redirect incoming mail (SMTP) requests at $WAN_IF ($WAN_IP) of FIREWALL to Mail server at 192.168.20.3  #iptables -t nat -A PREROUTING -p tcp -i $WAN_IF -d $WAN_IP --dport 25 -j DNAT --to-dest 192.168.20.3  # redirect incoming DNS requests at $WAN_IF ($WAN_IP) of FIREWALL to DNS server at 192.168.20.4  #iptables -t nat -A PREROUTING -p udp -i $WAN_IF -d $WAN_IP --dport 53 -j DNAT --to-dest 192.168.20.4  #iptables -t nat -A PREROUTING -p tcp -i $WAN_IF -d $WAN_IP --dport 53 -j DNAT --to-dest 192.168.20.4",
            "title": "Firewall Script"
        },
        {
            "location": "/linux/iptables/#stop-the-firewall",
            "text": "#!/bin/sh \niptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\niptables -P INPUT ACCEPT\niptables -P FORWARD ACCEPT\niptables -P OUTPUT ACCEPT",
            "title": "Stop the firewall"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/",
            "text": "Install Linux on Dell XPS 13 (2015)\n#\n\n\nEncrypting SSD\n#\n\n\nFor detailled instructions, see \nlinux/encrypt_system_ssd.md\n\n\nTroubleshooting black screen after unlock from suspend\n#\n\n\nFirst, install xscreensaver and deinstall lightdm\n\n\npacman -Rs lightdm\npacman -Rs lightdm*\nsystemctl disable lightm\n\n\n\n\n\nInstall xscreensaver (for locking) and mdm as display manager:\n\n\npacman -S xscreensaver mdm\nsystemctl enable mdm.service -f\n\n\n\n\n\nDelete old and orphan packages\n#\n\n\n  sudo pacman -Sc\n  sudo pacman -Rns $(pacman -Qqdt)\n\n\n\n\n\nUse fastest mirror for pacman\n#\n\n\nsudo pacman-mirrors -g\n\n\nInstall newest Kernel\n#\n\n\nOptimize power settings\n#\n\n\nsee https://wiki.manjaro.org/index.php?title=Optimized_power_settings\n\n\nInstall and configure conky\n#\n\n\nsee https://forum.manjaro.org/index.php?topic=2991.0\n\n\nFirewall\n#\n\n\nInstall ufw/gufw\n\n\nsee https://wiki.archlinux.org/index.php/Uncomplicated_Firewall\n\n\nOptimize performance\n#\n\n\nhttps://wiki.manjaro.org/index.php?title=Optimized_power_settings\n\n\nInstall MS Fonts\n#\n\n\nInstall ttf-ms-fonts and ttf-vista-fonts, this will not only make websites look more like on the Win7 office rig, but will also improve the looks of your imported Word docs a lot !\n\n\nDynamically changing the scheduler I/O disks\n#\n\n\nThe default I/O scheduler in Manjaro is BFQ . Higher read/write performance for the solid state drives have scheduler noop. You can automate the process of change scheduler disk I/O, depending on whether the disk is rotating (HDD) or not (SSD). Create a new file:\n\n\nsudo vim /etc/udev/rules.d/60-schedulers.rules\n\n\nPaste this code into it:\n\n\n# set noop scheduler for non-rotating disks\nACTION==\"add|change\", KERNEL==\"sd[a-z]\", ATTR{queue/rotational}==\"0\", ATTR{queue/scheduler}=\"noop\"\n# set bfq scheduler for rotating disks\nACTION==\"add|change\", KERNEL==\"sd[a-z]\", ATTR{queue/rotational}==\"1\", ATTR{queue/scheduler}=\"bfq\"\n\n\n\n\n\nSave changes to a file. Restart the computer.\n\n\nYou can check current using scheduler for all connected disks by command:\n\n\ncat /sys/block/sd*/queue/scheduler\n\n\nSysctl settings\n#\n\n\nEdit \n/etc/sysctl.d/100-manjaro.conf\n:\n\n\nvm.swappiness = 1\nkernel.kptr_restrict = 1\nkernel.sysrq = 0\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.log_martians = 1\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_timestamps = 0\n\n\n\n\n\nTroubleshooting\n#\n\n\nScreen not locking on suspend\n#\n\n\nsudo xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/logind-handle-lid-switch -s false",
            "title": "Linux on dell xps 13"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#install-linux-on-dell-xps-13-2015",
            "text": "",
            "title": "Install Linux on Dell XPS 13 (2015)"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#encrypting-ssd",
            "text": "For detailled instructions, see  linux/encrypt_system_ssd.md",
            "title": "Encrypting SSD"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#troubleshooting-black-screen-after-unlock-from-suspend",
            "text": "First, install xscreensaver and deinstall lightdm  pacman -Rs lightdm\npacman -Rs lightdm*\nsystemctl disable lightm  Install xscreensaver (for locking) and mdm as display manager:  pacman -S xscreensaver mdm\nsystemctl enable mdm.service -f",
            "title": "Troubleshooting black screen after unlock from suspend"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#delete-old-and-orphan-packages",
            "text": "sudo pacman -Sc\n  sudo pacman -Rns $(pacman -Qqdt)",
            "title": "Delete old and orphan packages"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#use-fastest-mirror-for-pacman",
            "text": "sudo pacman-mirrors -g",
            "title": "Use fastest mirror for pacman"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#install-newest-kernel",
            "text": "",
            "title": "Install newest Kernel"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#optimize-power-settings",
            "text": "see https://wiki.manjaro.org/index.php?title=Optimized_power_settings",
            "title": "Optimize power settings"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#install-and-configure-conky",
            "text": "see https://forum.manjaro.org/index.php?topic=2991.0",
            "title": "Install and configure conky"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#firewall",
            "text": "Install ufw/gufw  see https://wiki.archlinux.org/index.php/Uncomplicated_Firewall",
            "title": "Firewall"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#optimize-performance",
            "text": "https://wiki.manjaro.org/index.php?title=Optimized_power_settings",
            "title": "Optimize performance"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#install-ms-fonts",
            "text": "Install ttf-ms-fonts and ttf-vista-fonts, this will not only make websites look more like on the Win7 office rig, but will also improve the looks of your imported Word docs a lot !",
            "title": "Install MS Fonts"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#dynamically-changing-the-scheduler-io-disks",
            "text": "The default I/O scheduler in Manjaro is BFQ . Higher read/write performance for the solid state drives have scheduler noop. You can automate the process of change scheduler disk I/O, depending on whether the disk is rotating (HDD) or not (SSD). Create a new file:  sudo vim /etc/udev/rules.d/60-schedulers.rules  Paste this code into it:  # set noop scheduler for non-rotating disks\nACTION==\"add|change\", KERNEL==\"sd[a-z]\", ATTR{queue/rotational}==\"0\", ATTR{queue/scheduler}=\"noop\"\n# set bfq scheduler for rotating disks\nACTION==\"add|change\", KERNEL==\"sd[a-z]\", ATTR{queue/rotational}==\"1\", ATTR{queue/scheduler}=\"bfq\"  Save changes to a file. Restart the computer.  You can check current using scheduler for all connected disks by command:  cat /sys/block/sd*/queue/scheduler",
            "title": "Dynamically changing the scheduler I/O disks"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#sysctl-settings",
            "text": "Edit  /etc/sysctl.d/100-manjaro.conf :  vm.swappiness = 1\nkernel.kptr_restrict = 1\nkernel.sysrq = 0\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.log_martians = 1\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_timestamps = 0",
            "title": "Sysctl settings"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#troubleshooting",
            "text": "",
            "title": "Troubleshooting"
        },
        {
            "location": "/linux/linux_on_dell_xps_13/#screen-not-locking-on-suspend",
            "text": "sudo xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/logind-handle-lid-switch -s false",
            "title": "Screen not locking on suspend"
        },
        {
            "location": "/linux/lxc/",
            "text": "LXC Containers (ARCH)\n#\n\n\nCreate container\n#\n\n\nlxc-create -n <containername> -t download\n\n\n\n\n\nDefault container config\n#\n\n\nArch Container\n#\n\n\nlxc.network.type = veth\nlxc.network.name = eth0\nlxc.network.link = br0\nlxc.network.flags = up\nlxc.network.veth.pair = veth0-pandora\nlxc.network.ipv4=10.200.200.222/8\nlxc.network.ipv4.gateway=10.200.200.1\n\n# By default, lxc symlinks /dev/kmsg to /dev/console, this leads to journald \n# running at 100% CPU usage all the time. To prevent the symlink, use: \nlxc.kmsg = 0\n\nlxc.rootfs = /data/lxc/pandora/rootfs\nlxc.rootfs.backend = dir\nlxc.utsname = pandora\nlxc.arch = x86_64\nlxc.include = /usr/share/lxc/config/archlinux.common.conf\n\n# disables AppArmor confinement\nlxc.aa_profile = unconfined\n# give all capabilities to the processes in LXC container\nlxc.cap.drop =\n\n#lxc.hook.autodev = /usr/share/lxc/hooks/auto-tun\n\n# Allow tun/tap\nlxc.cgroup.devices.allow = c 10:200 rwm\n\nlxc.start.auto = 1\n\n\n\n\n\nAlpine Container\n#\n\n\nlxc.network.type = veth\nlxc.network.name = eth0\nlxc.network.link = br0\nlxc.network.flags = up\nlxc.network.veth.pair = veth0-alpinetpl\nlxc.network.ipv4=10.200.200.223/8\nlxc.network.ipv4.gateway=10.200.200.1\n\nlxc.rootfs = /var/lib/lxc/alpinetemplate/rootfs\nlxc.rootfs.backend = dir\nlxc.arch = x86_64\n\n# Set hostname.\nlxc.utsname = alpinetemplate\n\n# If something doesn't work, try to comment this out.\n# Dropping sys_admin disables container root from doing a lot of things\n# that could be bad like re-mounting lxc fstab entries rw for example,\n# but also disables some useful things like being able to nfs mount, and\n# things that are already namespaced with ns_capable() kernel checks, like\n# hostname(1).\nlxc.cap.drop = sys_admin\n\n# Include common configuration.\nlxc.include = /usr/share/lxc/config/alpine.common.conf\n\nlxc.start.auto = 1\n\n\n\n\n\nAllow docker inside LXC\n#\n\n\nAllow tun/tap inside lxc config:\n\n\nlxc.cgroup.devices.allow = c 10:200 rwm\n\n\n\n\n\nCreate device inside LXC container:\n\n\nif ! [ -d /dev/net ];then\n mkdir /dev/net\nfi\nif ! [ -c /dev/net/tun ]; then\n mknod /dev/net/tun c 10 200\n chmod 666 /dev/net/tun\nfi",
            "title": "Lxc"
        },
        {
            "location": "/linux/lxc/#lxc-containers-arch",
            "text": "",
            "title": "LXC Containers (ARCH)"
        },
        {
            "location": "/linux/lxc/#create-container",
            "text": "lxc-create -n <containername> -t download",
            "title": "Create container"
        },
        {
            "location": "/linux/lxc/#default-container-config",
            "text": "",
            "title": "Default container config"
        },
        {
            "location": "/linux/lxc/#arch-container",
            "text": "lxc.network.type = veth\nlxc.network.name = eth0\nlxc.network.link = br0\nlxc.network.flags = up\nlxc.network.veth.pair = veth0-pandora\nlxc.network.ipv4=10.200.200.222/8\nlxc.network.ipv4.gateway=10.200.200.1\n\n# By default, lxc symlinks /dev/kmsg to /dev/console, this leads to journald \n# running at 100% CPU usage all the time. To prevent the symlink, use: \nlxc.kmsg = 0\n\nlxc.rootfs = /data/lxc/pandora/rootfs\nlxc.rootfs.backend = dir\nlxc.utsname = pandora\nlxc.arch = x86_64\nlxc.include = /usr/share/lxc/config/archlinux.common.conf\n\n# disables AppArmor confinement\nlxc.aa_profile = unconfined\n# give all capabilities to the processes in LXC container\nlxc.cap.drop =\n\n#lxc.hook.autodev = /usr/share/lxc/hooks/auto-tun\n\n# Allow tun/tap\nlxc.cgroup.devices.allow = c 10:200 rwm\n\nlxc.start.auto = 1",
            "title": "Arch Container"
        },
        {
            "location": "/linux/lxc/#alpine-container",
            "text": "lxc.network.type = veth\nlxc.network.name = eth0\nlxc.network.link = br0\nlxc.network.flags = up\nlxc.network.veth.pair = veth0-alpinetpl\nlxc.network.ipv4=10.200.200.223/8\nlxc.network.ipv4.gateway=10.200.200.1\n\nlxc.rootfs = /var/lib/lxc/alpinetemplate/rootfs\nlxc.rootfs.backend = dir\nlxc.arch = x86_64\n\n# Set hostname.\nlxc.utsname = alpinetemplate\n\n# If something doesn't work, try to comment this out.\n# Dropping sys_admin disables container root from doing a lot of things\n# that could be bad like re-mounting lxc fstab entries rw for example,\n# but also disables some useful things like being able to nfs mount, and\n# things that are already namespaced with ns_capable() kernel checks, like\n# hostname(1).\nlxc.cap.drop = sys_admin\n\n# Include common configuration.\nlxc.include = /usr/share/lxc/config/alpine.common.conf\n\nlxc.start.auto = 1",
            "title": "Alpine Container"
        },
        {
            "location": "/linux/lxc/#allow-docker-inside-lxc",
            "text": "Allow tun/tap inside lxc config:  lxc.cgroup.devices.allow = c 10:200 rwm  Create device inside LXC container:  if ! [ -d /dev/net ];then\n mkdir /dev/net\nfi\nif ! [ -c /dev/net/tun ]; then\n mknod /dev/net/tun c 10 200\n chmod 666 /dev/net/tun\nfi",
            "title": "Allow docker inside LXC"
        },
        {
            "location": "/linux/raid+lvm/",
            "text": "RAID + LVM + Encryption\n#\n\n\n\n\n2 identical HDs (/dev/hdb and /dev/hdc)\n\n\n\n\nPartitioning\n#\n\n\nPreparing first HD\n#\n\n\ngdisk /dev/sdb\n# create partition with type fd00 (Raid)\n# write and exit\n\n\n\n\n\nClone partition table to /dev/sdc\n#\n\n\nClone partitions with \nsgdisk\n:\n\n\nsgdisk --backup=table /dev/sdb\nsgdisk --load-backup=table /dev/sdc\n\n\n\n\n\nCreate RAID array\n#\n\n\nmdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/sd[bc]1\n\n\nEncryption\n#\n\n\ncryptsetup luksFormat -c aes-xts-plain64 -s 512 /dev/md0\ncryptsetup luksOpen /dev/md0 cryptdisk\n\n\n\n\n\nLVM\n#\n\n\nThe three next steps create, in this order, the physical volume (the container, if you will), the group and then the individual volumes contained in the group. Choose simple, memorable names and do not hypenate them. The {pv,vg,lv}display commands print out the details of the devices once created.\n\n\npvcreate /dev/mapper/cryptdisk\npvdisplay\n\nvgcreate vgraid /dev/mapper/cryptdisk\nvgdisplay\n\nlvcreate -l +100%FREE  vgraid -n data\n\n\n\n\n\nFormat volume\n#\n\n\nmkfs.ext4 -L data -m 0 /dev/vgraid/data\n\n\nGet 5% space from data volume\n#\n\n\n5% space are by default hidden on ext4 partitions. This is typically used on root partition as a safeguard when the disk gets full. On non-root partition this hidden space can be easily and safely reclaimed back by using the following command.\n\n\ntune2fs -m 0 /dev/mapper/data\n\n\nUpdate RAID configuration\n#\n\n\nSince the installer builds the initrd using /etc/mdadm.conf in the target system, you should update that file with your RAID configuration. The original file can simply be deleted because it contains comments on how to fill it correctly, and that is something mdadm can do automatically for you. So let us delete the original and have mdadm create you a new one with the current setup:\n\n\nmdadm --examine --scan >> /etc/mdadm.conf\n\n\ncrypttap and fstab\n#\n\n\nGenerate a keyfile:\n\ndd bs=512 count=4 if=/dev/urandom of=/etc/keyfile_cryptdisk iflag=fullblock\n\n\nAdd keyfile to key slot:\n\ncryptsetup luksAddKey /dev/md0 /etc/keyfile_cryptdisk\n\n\nAdd \n/etc/crypttab\n entry: \n\n\ncryptdisk       /dev/md0                /etc/keyfile_cryptdisk\n\n\n\n\n\nAdd \n/etc/fstab\n entry\n\n\n/dev/vgraid/data        /data           ext4            defaults,relatime       0 1",
            "title": "Raid+lvm"
        },
        {
            "location": "/linux/raid+lvm/#raid-lvm-encryption",
            "text": "2 identical HDs (/dev/hdb and /dev/hdc)",
            "title": "RAID + LVM + Encryption"
        },
        {
            "location": "/linux/raid+lvm/#partitioning",
            "text": "",
            "title": "Partitioning"
        },
        {
            "location": "/linux/raid+lvm/#preparing-first-hd",
            "text": "gdisk /dev/sdb\n# create partition with type fd00 (Raid)\n# write and exit",
            "title": "Preparing first HD"
        },
        {
            "location": "/linux/raid+lvm/#clone-partition-table-to-devsdc",
            "text": "Clone partitions with  sgdisk :  sgdisk --backup=table /dev/sdb\nsgdisk --load-backup=table /dev/sdc",
            "title": "Clone partition table to /dev/sdc"
        },
        {
            "location": "/linux/raid+lvm/#create-raid-array",
            "text": "mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/sd[bc]1",
            "title": "Create RAID array"
        },
        {
            "location": "/linux/raid+lvm/#encryption",
            "text": "cryptsetup luksFormat -c aes-xts-plain64 -s 512 /dev/md0\ncryptsetup luksOpen /dev/md0 cryptdisk",
            "title": "Encryption"
        },
        {
            "location": "/linux/raid+lvm/#lvm",
            "text": "The three next steps create, in this order, the physical volume (the container, if you will), the group and then the individual volumes contained in the group. Choose simple, memorable names and do not hypenate them. The {pv,vg,lv}display commands print out the details of the devices once created.  pvcreate /dev/mapper/cryptdisk\npvdisplay\n\nvgcreate vgraid /dev/mapper/cryptdisk\nvgdisplay\n\nlvcreate -l +100%FREE  vgraid -n data",
            "title": "LVM"
        },
        {
            "location": "/linux/raid+lvm/#format-volume",
            "text": "mkfs.ext4 -L data -m 0 /dev/vgraid/data",
            "title": "Format volume"
        },
        {
            "location": "/linux/raid+lvm/#get-5-space-from-data-volume",
            "text": "5% space are by default hidden on ext4 partitions. This is typically used on root partition as a safeguard when the disk gets full. On non-root partition this hidden space can be easily and safely reclaimed back by using the following command.  tune2fs -m 0 /dev/mapper/data",
            "title": "Get 5% space from data volume"
        },
        {
            "location": "/linux/raid+lvm/#update-raid-configuration",
            "text": "Since the installer builds the initrd using /etc/mdadm.conf in the target system, you should update that file with your RAID configuration. The original file can simply be deleted because it contains comments on how to fill it correctly, and that is something mdadm can do automatically for you. So let us delete the original and have mdadm create you a new one with the current setup:  mdadm --examine --scan >> /etc/mdadm.conf",
            "title": "Update RAID configuration"
        },
        {
            "location": "/linux/raid+lvm/#crypttap-and-fstab",
            "text": "Generate a keyfile: dd bs=512 count=4 if=/dev/urandom of=/etc/keyfile_cryptdisk iflag=fullblock  Add keyfile to key slot: cryptsetup luksAddKey /dev/md0 /etc/keyfile_cryptdisk  Add  /etc/crypttab  entry:   cryptdisk       /dev/md0                /etc/keyfile_cryptdisk  Add  /etc/fstab  entry  /dev/vgraid/data        /data           ext4            defaults,relatime       0 1",
            "title": "crypttap and fstab"
        },
        {
            "location": "/linux/raspberry_pi/",
            "text": "Setup Raspberry Pi as Server\n#\n\n\nChange keyboard layout\n#\n\n\ndpkg-reconfigure keyboard-configuration\n\n\n\n\n\nGet WiFi working\n#\n\n\nwpa_passphrase <essid> <passphrase> >> /etc/wpa_supplicant/wpa_supplicant.conf\nreboot\n\n\n\n\n\nSet timezone\n#\n\n\ntimedatectl set-timezone Europe/Berlin\n\n\n\n\n\nSSH Server\n#\n\n\nAdd public key to ~/.ssh/authorized_keys.\n\n\nEdit \n/etc/sshd_config\n:\n\n\n# Package generated configuration file\n# See the sshd_config(5) manpage for details\n\nPort 22\nProtocol 2\n# HostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nHostKey /etc/ssh/ssh_host_ed25519_key\n#Privilege Separation is turned on for security\nUsePrivilegeSeparation yes\n\n# Lifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 3600\nServerKeyBits 1024\n\n# Logging\nSyslogFacility AUTH\nLogLevel INFO\n\n# Authentication:\nLoginGraceTime 120\nPermitRootLogin no\nStrictModes yes\n\nRSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile      %h/.ssh/authorized_keys\n\n# Don't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\n# For this to work you will also need host keys in /etc/ssh_known_hosts\nRhostsRSAAuthentication no\n# similar for protocol version 2\nHostbasedAuthentication no\n# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication\n#IgnoreUserKnownHosts yes\n\n# To enable empty passwords, change to yes (NOT RECOMMENDED)\nPermitEmptyPasswords no\n\n# Change to yes to enable challenge-response passwords (beware issues with\n# some PAM modules and threads)\nChallengeResponseAuthentication no\n\n# Change to no to disable tunnelled clear text passwords\nPasswordAuthentication no\n\nX11Forwarding yes\nX11DisplayOffset 10\nPrintMotd no\nPrintLastLog yes\nTCPKeepAlive yes\n#UseLogin no\n\n#MaxStartups 10:30:60\n#Banner /etc/issue.net\n\n# Allow client to pass locale environment variables\nAcceptEnv LANG LC_*\n\nSubsystem sftp /usr/lib/openssh/sftp-server\n\n# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\nUsePAM yes\n\n\n\n\n\nResize root partition\n#\n\n\nfdisk /dev/mmcblk0p2\np     # wirte doen first block of root partition\nd 2   # delete root partition\nn     # recreate root partition with old start sector\nreboot\nresize2fs /dev/mmcblk0p2\n\n\n\n\n\nSoftware installation\n#\n\n\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get dist-upgrade\nreboot\nsudo apt-get install screen vim rpi-update git git-core\n\n\n\n\n\nChange hostname\n#\n\n\nEdit in \n/etc/hostname\n and \n/etc/hosts\n:\n\n\nPartitions and fstab\n#\n\n\nPartitions on external HD:\n\n\nMountpoint  Device     Boot      Start        End   Sectors   Size Id Type\n/home       /dev/sda1             2048  976564223 976562176 465.7G 83 Linux\n/var        /dev/sda2        976564224 1605709823 629145600   300G 83 Linux\n/tmp        /dev/sda3       1605709824 1739927551 134217728    64G 83 Linux\nextended    /dev/sda4       1739927552 1953525167 213597616 101.9G  5 Extended\nswap        /dev/sda5       1739929600 1778991103  39061504  18.6G 82 Linux swap / Solaris\n/srv        /dev/sda6       1778993152 1953525167 174532016  83.2G 83 Linux\n\n\n\n\n\nFormat disks:\n\n\nmkfs.ext4 -L home /dev/sda1 \nmkfs.ext4 -L var /dev/sda2\nmkfs.ext4 -L tmp /dev/sda3\nmkfs.ext4 -L srv /dev/sda6\nmkswap /dev/sda5 \nmkswap -L swap /dev/sda5 \n\n\n\n\n\nMount disks:\n\n\nmkdir -p /mnt/tmp/home\nmkdir -p /mnt/tmp/var\nmkdir -p /mnt/tmp/tmp\nmkdir -p /mnt/tmp/srv\nmount /dev/sda1 /mnt/tmp/home\nmount /dev/sda2 /mnt/tmp/var\nmount /dev/sda3 /mnt/tmp/tmp\nmount /dev/sda6 /mnt/tmp/srv\n\n\n\n\n\nCopy content of existing partitions to external HD:\n\n\ncp -afv /home/* /mnt/tmp/home\ncp -afv /var/* /mnt/tmp/var\ncp -afv /tmp/* /mnt/tmp/tmp\ncp -afv /srv/* /mnt/tmp/srv\n\n\n\n\n\nAdd new partitions to \n/etc/fstab\n:\n\n\n/dev/sda1       /home           ext4    defaults,noatime  0       1\n/dev/sda2       /var            ext4    defaults,noatime  0       1\n/dev/sda3       /tmp            ext4    defaults,noatime  0       1\n/dev/sda6       /srv            ext4    defaults,noatime  0       1\n/dev/sda5       none            swap    sw                0       0\ntmpfs           /tmp            tmpfs   defaults,noatime,mode=1777 0   0\n\n\n\n\n\nReboot.\n\n\nFirewall\n#\n\n\nTCP/IP Stack Hardening\n#\n\n\nEdit the configuration file for setting system variables \n/etc/sysctl.conf\n:\n\n\n# Prevent SYN attack.\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_syn_retries = 5\nnet.ipv4.tcp_synack_retries = 2\nnet.ipv4.tcp_max_syn_backlog = 1024\n\n# Disables packet forwarding.\nnet.ipv4.ip_forward = 0\nnet.ipv4.conf.all.forwarding = 0\nnet.ipv4.conf.default.forwarding = 0\nnet.ipv6.conf.all.forwarding = 0\nnet.ipv6.conf.default.forwarding = 0\n\n# Disables IP source routing.\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv6.conf.all.accept_source_route = 0\nnet.ipv6.conf.default.accept_source_route = 0\n\n# Do not accept ICMP redirects (prevent MITM attacks).\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0\n\n# Enable Spoof protection (reverse-path filter).\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.conf.all.rp_filter = 1\n\n# Disable Log Spoofed Packets, Source Routed Packets, Redirect Packets.\nnet.ipv4.conf.all.log_martians = 0\nnet.ipv4.conf.default.log_martians = 0\n\n# Decrease the time default value for tcp_fin_timeout connection.\nnet.ipv4.tcp_fin_timeout = 15\n\n# Decrease the time default value for connections to keep alive.\nnet.ipv4.tcp_keepalive_time = 300\nnet.ipv4.tcp_keepalive_probes = 5\nnet.ipv4.tcp_keepalive_intvl = 15\n\n# Don't relay bootp.\nnet.ipv4.conf.all.bootp_relay = 0\n\n# Don't proxy arp for anyone.\nnet.ipv4.conf.all.proxy_arp = 0\n\n# Turn on SACK.\nnet.ipv4.tcp_dsack = 1\nnet.ipv4.tcp_sack = 1\nnet.ipv4.tcp_fack = 1\n\n# Turn on the tcp_timestamps.\nnet.ipv4.tcp_timestamps = 1\n\n# Don't ignore directed pings.\nnet.ipv4.icmp_echo_ignore_all = 0\n\n# Enable ignoring broadcasts request.\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\n\n# Enable bad error message Protection.\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n\n# Specify the allowed local port range.\nnet.ipv4.ip_local_port_range = 2000 65535\n\n# Protect Against TCP Time-Wait.\nnet.ipv4.tcp_rfc1337 = 1\n\n# Specify the minimum of free memory in KB.\nvm.min_free_kbytes = 8192\n\n\n\n\n\nApply the changes to sysctl: \nsysctl -p\n\n\nDNS Server\n#\n\n\nBackup\n#",
            "title": "Raspberry pi"
        },
        {
            "location": "/linux/raspberry_pi/#setup-raspberry-pi-as-server",
            "text": "",
            "title": "Setup Raspberry Pi as Server"
        },
        {
            "location": "/linux/raspberry_pi/#change-keyboard-layout",
            "text": "dpkg-reconfigure keyboard-configuration",
            "title": "Change keyboard layout"
        },
        {
            "location": "/linux/raspberry_pi/#get-wifi-working",
            "text": "wpa_passphrase <essid> <passphrase> >> /etc/wpa_supplicant/wpa_supplicant.conf\nreboot",
            "title": "Get WiFi working"
        },
        {
            "location": "/linux/raspberry_pi/#set-timezone",
            "text": "timedatectl set-timezone Europe/Berlin",
            "title": "Set timezone"
        },
        {
            "location": "/linux/raspberry_pi/#ssh-server",
            "text": "Add public key to ~/.ssh/authorized_keys.  Edit  /etc/sshd_config :  # Package generated configuration file\n# See the sshd_config(5) manpage for details\n\nPort 22\nProtocol 2\n# HostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nHostKey /etc/ssh/ssh_host_ed25519_key\n#Privilege Separation is turned on for security\nUsePrivilegeSeparation yes\n\n# Lifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 3600\nServerKeyBits 1024\n\n# Logging\nSyslogFacility AUTH\nLogLevel INFO\n\n# Authentication:\nLoginGraceTime 120\nPermitRootLogin no\nStrictModes yes\n\nRSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile      %h/.ssh/authorized_keys\n\n# Don't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\n# For this to work you will also need host keys in /etc/ssh_known_hosts\nRhostsRSAAuthentication no\n# similar for protocol version 2\nHostbasedAuthentication no\n# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication\n#IgnoreUserKnownHosts yes\n\n# To enable empty passwords, change to yes (NOT RECOMMENDED)\nPermitEmptyPasswords no\n\n# Change to yes to enable challenge-response passwords (beware issues with\n# some PAM modules and threads)\nChallengeResponseAuthentication no\n\n# Change to no to disable tunnelled clear text passwords\nPasswordAuthentication no\n\nX11Forwarding yes\nX11DisplayOffset 10\nPrintMotd no\nPrintLastLog yes\nTCPKeepAlive yes\n#UseLogin no\n\n#MaxStartups 10:30:60\n#Banner /etc/issue.net\n\n# Allow client to pass locale environment variables\nAcceptEnv LANG LC_*\n\nSubsystem sftp /usr/lib/openssh/sftp-server\n\n# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\nUsePAM yes",
            "title": "SSH Server"
        },
        {
            "location": "/linux/raspberry_pi/#resize-root-partition",
            "text": "fdisk /dev/mmcblk0p2\np     # wirte doen first block of root partition\nd 2   # delete root partition\nn     # recreate root partition with old start sector\nreboot\nresize2fs /dev/mmcblk0p2",
            "title": "Resize root partition"
        },
        {
            "location": "/linux/raspberry_pi/#software-installation",
            "text": "sudo apt-get update\nsudo apt-get upgrade\nsudo apt-get dist-upgrade\nreboot\nsudo apt-get install screen vim rpi-update git git-core",
            "title": "Software installation"
        },
        {
            "location": "/linux/raspberry_pi/#change-hostname",
            "text": "Edit in  /etc/hostname  and  /etc/hosts :",
            "title": "Change hostname"
        },
        {
            "location": "/linux/raspberry_pi/#partitions-and-fstab",
            "text": "Partitions on external HD:  Mountpoint  Device     Boot      Start        End   Sectors   Size Id Type\n/home       /dev/sda1             2048  976564223 976562176 465.7G 83 Linux\n/var        /dev/sda2        976564224 1605709823 629145600   300G 83 Linux\n/tmp        /dev/sda3       1605709824 1739927551 134217728    64G 83 Linux\nextended    /dev/sda4       1739927552 1953525167 213597616 101.9G  5 Extended\nswap        /dev/sda5       1739929600 1778991103  39061504  18.6G 82 Linux swap / Solaris\n/srv        /dev/sda6       1778993152 1953525167 174532016  83.2G 83 Linux  Format disks:  mkfs.ext4 -L home /dev/sda1 \nmkfs.ext4 -L var /dev/sda2\nmkfs.ext4 -L tmp /dev/sda3\nmkfs.ext4 -L srv /dev/sda6\nmkswap /dev/sda5 \nmkswap -L swap /dev/sda5   Mount disks:  mkdir -p /mnt/tmp/home\nmkdir -p /mnt/tmp/var\nmkdir -p /mnt/tmp/tmp\nmkdir -p /mnt/tmp/srv\nmount /dev/sda1 /mnt/tmp/home\nmount /dev/sda2 /mnt/tmp/var\nmount /dev/sda3 /mnt/tmp/tmp\nmount /dev/sda6 /mnt/tmp/srv  Copy content of existing partitions to external HD:  cp -afv /home/* /mnt/tmp/home\ncp -afv /var/* /mnt/tmp/var\ncp -afv /tmp/* /mnt/tmp/tmp\ncp -afv /srv/* /mnt/tmp/srv  Add new partitions to  /etc/fstab :  /dev/sda1       /home           ext4    defaults,noatime  0       1\n/dev/sda2       /var            ext4    defaults,noatime  0       1\n/dev/sda3       /tmp            ext4    defaults,noatime  0       1\n/dev/sda6       /srv            ext4    defaults,noatime  0       1\n/dev/sda5       none            swap    sw                0       0\ntmpfs           /tmp            tmpfs   defaults,noatime,mode=1777 0   0  Reboot.",
            "title": "Partitions and fstab"
        },
        {
            "location": "/linux/raspberry_pi/#firewall",
            "text": "",
            "title": "Firewall"
        },
        {
            "location": "/linux/raspberry_pi/#tcpip-stack-hardening",
            "text": "Edit the configuration file for setting system variables  /etc/sysctl.conf :  # Prevent SYN attack.\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_syn_retries = 5\nnet.ipv4.tcp_synack_retries = 2\nnet.ipv4.tcp_max_syn_backlog = 1024\n\n# Disables packet forwarding.\nnet.ipv4.ip_forward = 0\nnet.ipv4.conf.all.forwarding = 0\nnet.ipv4.conf.default.forwarding = 0\nnet.ipv6.conf.all.forwarding = 0\nnet.ipv6.conf.default.forwarding = 0\n\n# Disables IP source routing.\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv6.conf.all.accept_source_route = 0\nnet.ipv6.conf.default.accept_source_route = 0\n\n# Do not accept ICMP redirects (prevent MITM attacks).\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0\n\n# Enable Spoof protection (reverse-path filter).\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.conf.all.rp_filter = 1\n\n# Disable Log Spoofed Packets, Source Routed Packets, Redirect Packets.\nnet.ipv4.conf.all.log_martians = 0\nnet.ipv4.conf.default.log_martians = 0\n\n# Decrease the time default value for tcp_fin_timeout connection.\nnet.ipv4.tcp_fin_timeout = 15\n\n# Decrease the time default value for connections to keep alive.\nnet.ipv4.tcp_keepalive_time = 300\nnet.ipv4.tcp_keepalive_probes = 5\nnet.ipv4.tcp_keepalive_intvl = 15\n\n# Don't relay bootp.\nnet.ipv4.conf.all.bootp_relay = 0\n\n# Don't proxy arp for anyone.\nnet.ipv4.conf.all.proxy_arp = 0\n\n# Turn on SACK.\nnet.ipv4.tcp_dsack = 1\nnet.ipv4.tcp_sack = 1\nnet.ipv4.tcp_fack = 1\n\n# Turn on the tcp_timestamps.\nnet.ipv4.tcp_timestamps = 1\n\n# Don't ignore directed pings.\nnet.ipv4.icmp_echo_ignore_all = 0\n\n# Enable ignoring broadcasts request.\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\n\n# Enable bad error message Protection.\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n\n# Specify the allowed local port range.\nnet.ipv4.ip_local_port_range = 2000 65535\n\n# Protect Against TCP Time-Wait.\nnet.ipv4.tcp_rfc1337 = 1\n\n# Specify the minimum of free memory in KB.\nvm.min_free_kbytes = 8192  Apply the changes to sysctl:  sysctl -p",
            "title": "TCP/IP Stack Hardening"
        },
        {
            "location": "/linux/raspberry_pi/#dns-server",
            "text": "",
            "title": "DNS Server"
        },
        {
            "location": "/linux/raspberry_pi/#backup",
            "text": "",
            "title": "Backup"
        },
        {
            "location": "/linux/sync_configs_with_mackup/",
            "text": "Sync configs across systems with Mackup\n#\n\n\nSources: https://github.com/lra/mackup\n\n\nPlace your .mackup.cfg on a synchronized directory and symlink to the file:\n\n\nnn -sf /path/to/your/.mackup.cfg ~/.mackup.cfg\n\n\nExample .mackup.cfg:\n\n\n[configuration_files]\n\n\n.mackup.cfg\n\n\n\n[storage]\n\n\nengine\n \n=\n \nfile_system\n\n\npath\n \n=\n \nownCloud/\n\n\ndirectory\n \n=\n \nmackup\n\n\n\n[applications_to_sync]\n\n\nwatson\n\n\nmackup\n\n\nsublime-text-3\n\n\ngit\n\n\nbundler\n\n\n\n\n[applications_to_ignore]\n\n\nssh",
            "title": "Sync configs with mackup"
        },
        {
            "location": "/linux/sync_configs_with_mackup/#sync-configs-across-systems-with-mackup",
            "text": "Sources: https://github.com/lra/mackup  Place your .mackup.cfg on a synchronized directory and symlink to the file:  nn -sf /path/to/your/.mackup.cfg ~/.mackup.cfg  Example .mackup.cfg:  [configuration_files]  .mackup.cfg  [storage]  engine   =   file_system  path   =   ownCloud/  directory   =   mackup  [applications_to_sync]  watson  mackup  sublime-text-3  git  bundler  [applications_to_ignore]  ssh",
            "title": "Sync configs across systems with Mackup"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/",
            "text": "Install Ubuntu Touch on Nexus 5\n#\n\n\nInstall Flash tools\n#\n\n\nMethod 1: Ubuntu inside Docker\n#\n\n\nUse Ubuntu docker container and mount usb devices as volumes\n\n\ndocker run -i -t --name ubuntu --privileged -v /dev/bus/usb:/dev/bus/usb ubuntu:latest /bin/bash\n\n\nInstall required software\n\n\napt-get update\napt-get install ubuntu-device-flash phablet-tools\n\n\n\n\n\nMethod 2: Arch Linux\n#\n\n\nyaourt -S ubuntu-device-flash\n\n\nFlash the ROM\n#\n\n\nFlash Ubuntu Touch:\n\n\nubuntu-device-flash --server=http://system-image.ubports.com touch --channel=ubuntu-touch/stable --device=hammerhead --bootstrap\n\n\n\n\n\nSync with owncloud/carddav/webdav\n#\n\n\nLogin with ADB.\n\n\nsudo -s\n\nsyncevolution --configure --template WebDAV username=<username> password=<'password'> syncURL=https://my.example.org/remote.php/ keyring=no target-config@owncloud\n\nsyncevolution --configure database=https://my.example.org/remote.php/carddav/addressbooks/<username>/<addressbookname>/ backend=carddav target-config@owncloud contacts\n\nsyncevolution --configure --template SyncEvolution_Client sync=none syncURL=local://@owncloud username= password= owncloud\n\nsyncevolution --configure sync=two-way backend=addressbook database= owncloud contacts\n\nsyncevolution --sync slow owncloud contacts\n\n\n\n\n\nCaldav:\n\n\nsyncevolution --configure database=https://my.example.org/remote.php/caldav/calendars/<USERNAME>/personal backend=caldav target-config@owncloud calendar\n\nsyncevolution --configure sync=two-way backend=events database=\"personal\" owncloud calendar\n\n\n\n\n\nTo sync again:\n\n\nsyncevolution owncloud calendar contacts\n\n\nBugs\n#\n\n\n\n\nSystem hangs on shutdown/reboot\n\n\n\n\nReferences\n#\n\n\n\n\nhttps://developer.ubuntu.com/en/phone/devices/installing-ubuntu-for-devices/\n\n\nhttps://devices.ubports.com/#/hammerhead",
            "title": "Ubuntu touch on nexus 5"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#install-ubuntu-touch-on-nexus-5",
            "text": "",
            "title": "Install Ubuntu Touch on Nexus 5"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#install-flash-tools",
            "text": "",
            "title": "Install Flash tools"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#method-1-ubuntu-inside-docker",
            "text": "Use Ubuntu docker container and mount usb devices as volumes  docker run -i -t --name ubuntu --privileged -v /dev/bus/usb:/dev/bus/usb ubuntu:latest /bin/bash  Install required software  apt-get update\napt-get install ubuntu-device-flash phablet-tools",
            "title": "Method 1: Ubuntu inside Docker"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#method-2-arch-linux",
            "text": "yaourt -S ubuntu-device-flash",
            "title": "Method 2: Arch Linux"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#flash-the-rom",
            "text": "Flash Ubuntu Touch:  ubuntu-device-flash --server=http://system-image.ubports.com touch --channel=ubuntu-touch/stable --device=hammerhead --bootstrap",
            "title": "Flash the ROM"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#sync-with-owncloudcarddavwebdav",
            "text": "Login with ADB.  sudo -s\n\nsyncevolution --configure --template WebDAV username=<username> password=<'password'> syncURL=https://my.example.org/remote.php/ keyring=no target-config@owncloud\n\nsyncevolution --configure database=https://my.example.org/remote.php/carddav/addressbooks/<username>/<addressbookname>/ backend=carddav target-config@owncloud contacts\n\nsyncevolution --configure --template SyncEvolution_Client sync=none syncURL=local://@owncloud username= password= owncloud\n\nsyncevolution --configure sync=two-way backend=addressbook database= owncloud contacts\n\nsyncevolution --sync slow owncloud contacts  Caldav:  syncevolution --configure database=https://my.example.org/remote.php/caldav/calendars/<USERNAME>/personal backend=caldav target-config@owncloud calendar\n\nsyncevolution --configure sync=two-way backend=events database=\"personal\" owncloud calendar  To sync again:  syncevolution owncloud calendar contacts",
            "title": "Sync with owncloud/carddav/webdav"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#bugs",
            "text": "System hangs on shutdown/reboot",
            "title": "Bugs"
        },
        {
            "location": "/linux/ubuntu_touch_on_nexus_5/#references",
            "text": "https://developer.ubuntu.com/en/phone/devices/installing-ubuntu-for-devices/  https://devices.ubports.com/#/hammerhead",
            "title": "References"
        },
        {
            "location": "/management/time_management/",
            "text": "25 Time management hacks\n#\n\n\n\n\nWork less, have more fun\n\n\nOnly plan for 4-5 hours of \nreal\n work per day. Days \nalways\n fil up\n\n\nIt's normal to have days where you just can't work and days where you'll work 12 hours straight. Work more when you're \nin the zone\n. \nRelax\n when you're not.\n\n\nStop multitasking. It merely kills your focus.\n\n\nSet up a work routine and stick with it. Your body will adapt.\n\n\nWe're always more \nfocused\n and \nproductive\n with limited time.\n\n\nWork is the best way to get working. Start with short tasks to get the ball rolling\n\n\nDoing\n is better than \nperfect\n. Work iteratively. Expectations to do things perfectly are stifling.\n\n\nMore work hours \ndoesn't\n mean more productivity. Use constraints tas opportunities.\n\n\nSeperate thinking and execution to execute faster and think better. Seperate \nbrainless\n and \nstrategic\n tasks to become motre productive.\n\n\nOrganize meetings early during the day. Time leading up to an event is often wasted.\n\n\nGroup meetings and communication (email or phone) to create blocks of uninterrupted work.\n\n\nKeep the same context throughout the day. Switching between projects/clients is unproductive.\n\n\nWork \naround\n procrastination. Procrastinate \nbetween\n intense sprints of work (Pomodoro)\n\n\nBreak the unreasonable down into reasonable chunks. A big goal is only achieved when every little thing that you do everyday, gets you closer to that goal.\n\n\nNo 2 tasks ever hold the same importance. Always prioritize. Be realy careful with to-do lists....\n\n\nOnly work on the thing that will have the biggest impact. Always know the \none\n thing you really need to get done during the day.\n\n\nBreak tasks into hour increments. Long tasks are hard to get into; feels like it needs to get done.\n\n\nIf something can be done 80% as well by someone else, delegate. Delegate and learn how to make use of other people.\n\n\nTurn the page on yesterday. Only ever think about today and tomorrow.\n\n\nSet deadlines for everything. Don't led tasks go on indefinitely.\n\n\nSet end dates for intense or stressful activities. Everythign ends at some point.\n\n\n\"Get a remidner app for everything. Do not trust your brain for your memory\". \nAlways\n take notes.\n\n\nWrite down anything that distracts you - Google searches, random thoughts, new ideas, whatever. The point is, if you write them down, they'll stop bubbling up when you're in the zone.\n\n\nTake breaks. \nSometimes\n.\n\n\n\n\nReferences: \nSlideshare by Etienne Garbugli",
            "title": "Time management"
        },
        {
            "location": "/management/time_management/#25-time-management-hacks",
            "text": "Work less, have more fun  Only plan for 4-5 hours of  real  work per day. Days  always  fil up  It's normal to have days where you just can't work and days where you'll work 12 hours straight. Work more when you're  in the zone .  Relax  when you're not.  Stop multitasking. It merely kills your focus.  Set up a work routine and stick with it. Your body will adapt.  We're always more  focused  and  productive  with limited time.  Work is the best way to get working. Start with short tasks to get the ball rolling  Doing  is better than  perfect . Work iteratively. Expectations to do things perfectly are stifling.  More work hours  doesn't  mean more productivity. Use constraints tas opportunities.  Seperate thinking and execution to execute faster and think better. Seperate  brainless  and  strategic  tasks to become motre productive.  Organize meetings early during the day. Time leading up to an event is often wasted.  Group meetings and communication (email or phone) to create blocks of uninterrupted work.  Keep the same context throughout the day. Switching between projects/clients is unproductive.  Work  around  procrastination. Procrastinate  between  intense sprints of work (Pomodoro)  Break the unreasonable down into reasonable chunks. A big goal is only achieved when every little thing that you do everyday, gets you closer to that goal.  No 2 tasks ever hold the same importance. Always prioritize. Be realy careful with to-do lists....  Only work on the thing that will have the biggest impact. Always know the  one  thing you really need to get done during the day.  Break tasks into hour increments. Long tasks are hard to get into; feels like it needs to get done.  If something can be done 80% as well by someone else, delegate. Delegate and learn how to make use of other people.  Turn the page on yesterday. Only ever think about today and tomorrow.  Set deadlines for everything. Don't led tasks go on indefinitely.  Set end dates for intense or stressful activities. Everythign ends at some point.  \"Get a remidner app for everything. Do not trust your brain for your memory\".  Always  take notes.  Write down anything that distracts you - Google searches, random thoughts, new ideas, whatever. The point is, if you write them down, they'll stop bubbling up when you're in the zone.  Take breaks.  Sometimes .   References:  Slideshare by Etienne Garbugli",
            "title": "25 Time management hacks"
        },
        {
            "location": "/rails/snippet_flash_messages/",
            "text": "Display Flash messages in Rails app\n#\n\n\n<%\n \nflash\n.\neach\n \ndo\n \n|\nkey\n,\n \nvalue\n|\n \n%>\n\n\n  \n<%=\n \ncontent_tag\n \n:div\n,\n \nvalue\n,\n \nclass\n:\n \n\"flash \n#{\nkey\n}\n\"\n \n%>\n\n\n<%\n \nend\n \n%>",
            "title": "Snippet flash messages"
        },
        {
            "location": "/rails/snippet_flash_messages/#display-flash-messages-in-rails-app",
            "text": "<%   flash . each   do   | key ,   value |   %>     <%=   content_tag   :div ,   value ,   class :   \"flash  #{ key } \"   %>  <%   end   %>",
            "title": "Display Flash messages in Rails app"
        }
    ]
}